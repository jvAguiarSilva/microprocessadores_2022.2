

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Dec 10 16:10:57 2022

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,inline
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    38  0000                     
    39                           ; Version 2.10
    40                           ; Generated 31/07/2019 GMT
    41                           ; 
    42                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F4550 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     _PORTDbits	set	3971
    74  0000                     _TMR2	set	4044
    75  0000                     _PR2	set	4043
    76  0000                     _T2CONbits	set	4042
    77  0000                     _ADCON1	set	4033
    78  0000                     _TRISD	set	3989
    79  0000                     _PORTD	set	3971
    80  0000                     _TRISAbits	set	3986
    81  0000                     _TRISBbits	set	3987
    82  0000                     _PORTAbits	set	3968
    83  0000                     _TMR2IF	set	31985
    84  0000                     _GIE	set	32663
    85  0000                     _PEIE	set	32662
    86  0000                     _INT0IE	set	32660
    87  0000                     _INT2IF	set	32641
    88  0000                     _INT1IF	set	32640
    89  0000                     _INT2IE	set	32644
    90  0000                     _INT1IE	set	32643
    91  0000                     _INT0IF	set	32657
    92                           
    93                           	psect	smallconst
    94  000800                     __psmallconst:
    95                           	opt callstack 0
    96  000800  00                 	db	0
    97  000801                     STR_1:
    98  000801  45                 	db	69	;'E'
    99  000802  6D                 	db	109	;'m'
   100  000803  70                 	db	112	;'p'
   101  000804  61                 	db	97	;'a'
   102  000805  74                 	db	116	;'t'
   103  000806  65                 	db	101	;'e'
   104  000807  20                 	db	32
   105  000808  3D                 	db	61	;'='
   106  000809  20                 	db	32
   107  00080A  25                 	db	37
   108  00080B  64                 	db	100	;'d'
   109  00080C  20                 	db	32
   110  00080D  6D                 	db	109	;'m'
   111  00080E  73                 	db	115	;'s'
   112  00080F  00                 	db	0
   113  000810                     STR_3:
   114  000810  52                 	db	82	;'R'
   115  000811  65                 	db	101	;'e'
   116  000812  64                 	db	100	;'d'
   117  000813  20                 	db	32
   118  000814  20                 	db	32
   119  000815  3D                 	db	61	;'='
   120  000816  20                 	db	32
   121  000817  25                 	db	37
   122  000818  64                 	db	100	;'d'
   123  000819  20                 	db	32
   124  00081A  6D                 	db	109	;'m'
   125  00081B  73                 	db	115	;'s'
   126  00081C  00                 	db	0
   127  00081D                     STR_2:
   128  00081D  42                 	db	66	;'B'
   129  00081E  6C                 	db	108	;'l'
   130  00081F  75                 	db	117	;'u'
   131  000820  65                 	db	101	;'e'
   132  000821  20                 	db	32
   133  000822  3D                 	db	61	;'='
   134  000823  20                 	db	32
   135  000824  25                 	db	37
   136  000825  64                 	db	100	;'d'
   137  000826  20                 	db	32
   138  000827  6D                 	db	109	;'m'
   139  000828  73                 	db	115	;'s'
   140  000829  00                 	db	0
   141                           
   142                           ; #config settings
   143  00082A  00                 	db	0	; dummy byte at the end
   144  0000                     
   145                           	psect	cinit
   146  0016DA                     __pcinit:
   147                           	opt callstack 0
   148  0016DA                     start_initialization:
   149                           	opt callstack 0
   150  0016DA                     __initialization:
   151                           	opt callstack 0
   152                           
   153                           ; Clear objects allocated to BANK0 (44 bytes)
   154  0016DA  EE00  F060         	lfsr	0,__pbssBANK0
   155  0016DE  0E2C               	movlw	44
   156  0016E0                     clear_0:
   157  0016E0  6AEE               	clrf	postinc0,c
   158  0016E2  06E8               	decf	wreg,f,c
   159  0016E4  E1FD               	bnz	clear_0
   160                           
   161                           ; Clear objects allocated to COMRAM (6 bytes)
   162  0016E6  6A57               	clrf	(__pbssCOMRAM+5)& (0+255),c
   163  0016E8  6A56               	clrf	(__pbssCOMRAM+4)& (0+255),c
   164  0016EA  6A55               	clrf	(__pbssCOMRAM+3)& (0+255),c
   165  0016EC  6A54               	clrf	(__pbssCOMRAM+2)& (0+255),c
   166  0016EE  6A53               	clrf	(__pbssCOMRAM+1)& (0+255),c
   167  0016F0  6A52               	clrf	__pbssCOMRAM& (0+255),c
   168  0016F2                     end_of_initialization:
   169                           	opt callstack 0
   170  0016F2                     __end_of__initialization:
   171                           	opt callstack 0
   172  0016F2  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   173  0016F4  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   174  0016F6  0E00               	movlw	low (__Lsmallconst shr (0+16))
   175  0016F8  6EF8               	movwf	tblptru,c
   176  0016FA  0E08               	movlw	high __Lsmallconst
   177  0016FC  6EF7               	movwf	tblptrh,c
   178  0016FE  0100               	movlb	0
   179  001700  EF85  F005         	goto	_main	;jump to C main() function
   180                           
   181                           	psect	bssCOMRAM
   182  000052                     __pbssCOMRAM:
   183                           	opt callstack 0
   184  000052                     _flags:
   185                           	opt callstack 0
   186  000052                     	ds	2
   187  000054                     _botao_vermelho:
   188                           	opt callstack 0
   189  000054                     	ds	2
   190  000056                     _botao_azul:
   191                           	opt callstack 0
   192  000056                     	ds	2
   193                           
   194                           	psect	bssBANK0
   195  000060                     __pbssBANK0:
   196                           	opt callstack 0
   197  000060                     _nout:
   198                           	opt callstack 0
   199  000060                     	ds	2
   200  000062                     _width:
   201                           	opt callstack 0
   202  000062                     	ds	2
   203  000064                     _prec:
   204                           	opt callstack 0
   205  000064                     	ds	2
   206  000066                     _tempo_vermelho:
   207                           	opt callstack 0
   208  000066                     	ds	2
   209  000068                     _tempo_azul:
   210                           	opt callstack 0
   211  000068                     	ds	2
   212  00006A                     _mediador:
   213                           	opt callstack 0
   214  00006A                     	ds	2
   215  00006C                     _dbuf:
   216                           	opt callstack 0
   217  00006C                     	ds	32
   218                           
   219                           	psect	cstackBANK0
   220  00008C                     __pcstackBANK0:
   221                           	opt callstack 0
   222  00008C                     ?_vfpfcnvrt:
   223                           	opt callstack 0
   224  00008C                     vfpfcnvrt@fp:
   225                           	opt callstack 0
   226                           
   227                           ; 2 bytes @ 0x0
   228  00008C                     	ds	2
   229  00008E                     vfpfcnvrt@fmt:
   230                           	opt callstack 0
   231                           
   232                           ; 2 bytes @ 0x2
   233  00008E                     	ds	2
   234  000090                     vfpfcnvrt@ap:
   235                           	opt callstack 0
   236                           
   237                           ; 2 bytes @ 0x4
   238  000090                     	ds	2
   239  000092                     vfpfcnvrt@ll:
   240                           	opt callstack 0
   241                           
   242                           ; 8 bytes @ 0x6
   243  000092                     	ds	8
   244  00009A                     ?_vfprintf:
   245                           	opt callstack 0
   246  00009A                     vfprintf@fp:
   247                           	opt callstack 0
   248                           
   249                           ; 2 bytes @ 0xE
   250  00009A                     	ds	2
   251  00009C                     vfprintf@fmt:
   252                           	opt callstack 0
   253                           
   254                           ; 2 bytes @ 0x10
   255  00009C                     	ds	2
   256  00009E                     vfprintf@ap:
   257                           	opt callstack 0
   258                           
   259                           ; 2 bytes @ 0x12
   260  00009E                     	ds	2
   261  0000A0                     ?_printf:
   262                           	opt callstack 0
   263  0000A0                     printf@fmt:
   264                           	opt callstack 0
   265                           
   266                           ; 2 bytes @ 0x14
   267  0000A0                     	ds	6
   268  0000A6                     printf@ap:
   269                           	opt callstack 0
   270                           
   271                           ; 2 bytes @ 0x1A
   272  0000A6                     	ds	2
   273  0000A8                     main@printa_na_tela:
   274                           	opt callstack 0
   275                           
   276                           ; 2 bytes @ 0x1C
   277  0000A8                     	ds	2
   278  0000AA                     main@empate:
   279                           	opt callstack 0
   280                           
   281                           ; 2 bytes @ 0x1E
   282  0000AA                     	ds	2
   283                           
   284                           	psect	cstackCOMRAM
   285  000001                     __pcstackCOMRAM:
   286                           	opt callstack 0
   287  000001                     ??i2_envia_nibble_lcd:
   288  000001                     
   289                           ; 1 bytes @ 0x0
   290  000001                     	ds	1
   291  000002                     i2envia_nibble_lcd@dado:
   292                           	opt callstack 0
   293                           
   294                           ; 1 bytes @ 0x1
   295  000002                     	ds	1
   296  000003                     i2envia_byte_lcd@dado:
   297                           	opt callstack 0
   298                           
   299                           ; 1 bytes @ 0x2
   300  000003                     	ds	1
   301  000004                     i2envia_byte_lcd@endereco:
   302                           	opt callstack 0
   303                           
   304                           ; 1 bytes @ 0x3
   305  000004                     	ds	1
   306  000005                     ??i2_limpa_lcd:
   307                           
   308                           ; 1 bytes @ 0x4
   309  000005                     	ds	1
   310  000006                     ??_isr:
   311                           
   312                           ; 1 bytes @ 0x5
   313  000006                     	ds	2
   314  000008                     ??_envia_nibble_lcd:
   315  000008                     ?_strlen:
   316                           	opt callstack 0
   317  000008                     ?___aodiv:
   318                           	opt callstack 0
   319  000008                     ?___aomod:
   320                           	opt callstack 0
   321  000008                     strlen@s:
   322                           	opt callstack 0
   323  000008                     ___aodiv@dividend:
   324                           	opt callstack 0
   325  000008                     ___aomod@dividend:
   326                           	opt callstack 0
   327                           
   328                           ; 8 bytes @ 0x7
   329  000008                     	ds	1
   330  000009                     envia_nibble_lcd@dado:
   331                           	opt callstack 0
   332                           
   333                           ; 1 bytes @ 0x8
   334  000009                     	ds	1
   335  00000A                     envia_byte_lcd@dado:
   336                           	opt callstack 0
   337  00000A                     strlen@a:
   338                           	opt callstack 0
   339                           
   340                           ; 2 bytes @ 0x9
   341  00000A                     	ds	1
   342  00000B                     envia_byte_lcd@endereco:
   343                           	opt callstack 0
   344                           
   345                           ; 1 bytes @ 0xA
   346  00000B                     	ds	1
   347  00000C                     ??_limpa_lcd:
   348  00000C                     ??_inicializa_lcd:
   349  00000C                     escreve_lcd@c:
   350                           	opt callstack 0
   351  00000C                     caracter_inicio@coluna:
   352                           	opt callstack 0
   353                           
   354                           ; 1 bytes @ 0xB
   355  00000C                     	ds	1
   356  00000D                     putch@data:
   357                           	opt callstack 0
   358  00000D                     caracter_inicio@linha:
   359                           	opt callstack 0
   360                           
   361                           ; 1 bytes @ 0xC
   362  00000D                     	ds	1
   363  00000E                     caracter_inicio@posicao:
   364                           	opt callstack 0
   365  00000E                     fputc@c:
   366                           	opt callstack 0
   367                           
   368                           ; 2 bytes @ 0xD
   369  00000E                     	ds	2
   370  000010                     fputc@fp:
   371                           	opt callstack 0
   372  000010                     ___aodiv@divisor:
   373                           	opt callstack 0
   374  000010                     ___aomod@divisor:
   375                           	opt callstack 0
   376                           
   377                           ; 8 bytes @ 0xF
   378  000010                     	ds	2
   379  000012                     ??_fputc:
   380                           
   381                           ; 1 bytes @ 0x11
   382  000012                     	ds	5
   383  000017                     fputs@s:
   384                           	opt callstack 0
   385                           
   386                           ; 2 bytes @ 0x16
   387  000017                     	ds	1
   388  000018                     ___aodiv@counter:
   389                           	opt callstack 0
   390  000018                     ___aomod@counter:
   391                           	opt callstack 0
   392                           
   393                           ; 1 bytes @ 0x17
   394  000018                     	ds	1
   395  000019                     ___aodiv@sign:
   396                           	opt callstack 0
   397  000019                     ___aomod@sign:
   398                           	opt callstack 0
   399  000019                     fputs@fp:
   400                           	opt callstack 0
   401                           
   402                           ; 2 bytes @ 0x18
   403  000019                     	ds	1
   404  00001A                     ?_abs:
   405                           	opt callstack 0
   406  00001A                     abs@a:
   407                           	opt callstack 0
   408  00001A                     ___aodiv@quotient:
   409                           	opt callstack 0
   410                           
   411                           ; 8 bytes @ 0x19
   412  00001A                     	ds	1
   413  00001B                     fputs@c:
   414                           	opt callstack 0
   415                           
   416                           ; 1 bytes @ 0x1A
   417  00001B                     	ds	1
   418  00001C                     ??_abs:
   419  00001C                     fputs@i:
   420                           	opt callstack 0
   421                           
   422                           ; 2 bytes @ 0x1B
   423  00001C                     	ds	2
   424  00001E                     ?_pad:
   425                           	opt callstack 0
   426  00001E                     pad@fp:
   427                           	opt callstack 0
   428                           
   429                           ; 2 bytes @ 0x1D
   430  00001E                     	ds	2
   431  000020                     pad@buf:
   432                           	opt callstack 0
   433                           
   434                           ; 2 bytes @ 0x1F
   435  000020                     	ds	2
   436  000022                     pad@p:
   437                           	opt callstack 0
   438                           
   439                           ; 2 bytes @ 0x21
   440  000022                     	ds	2
   441  000024                     ??_pad:
   442                           
   443                           ; 1 bytes @ 0x23
   444  000024                     	ds	1
   445  000025                     pad@i:
   446                           	opt callstack 0
   447                           
   448                           ; 2 bytes @ 0x24
   449  000025                     	ds	2
   450  000027                     pad@w:
   451                           	opt callstack 0
   452                           
   453                           ; 2 bytes @ 0x26
   454  000027                     	ds	2
   455  000029                     ?_dtoa:
   456                           	opt callstack 0
   457  000029                     dtoa@fp:
   458                           	opt callstack 0
   459                           
   460                           ; 2 bytes @ 0x28
   461  000029                     	ds	2
   462  00002B                     dtoa@d:
   463                           	opt callstack 0
   464                           
   465                           ; 8 bytes @ 0x2A
   466  00002B                     	ds	8
   467  000033                     ??_dtoa:
   468                           
   469                           ; 1 bytes @ 0x32
   470  000033                     	ds	8
   471  00003B                     _dtoa$421:
   472                           	opt callstack 0
   473                           
   474                           ; 2 bytes @ 0x3A
   475  00003B                     	ds	2
   476  00003D                     dtoa@p:
   477                           	opt callstack 0
   478                           
   479                           ; 2 bytes @ 0x3C
   480  00003D                     	ds	2
   481  00003F                     dtoa@w:
   482                           	opt callstack 0
   483                           
   484                           ; 2 bytes @ 0x3E
   485  00003F                     	ds	2
   486  000041                     dtoa@s:
   487                           	opt callstack 0
   488                           
   489                           ; 2 bytes @ 0x40
   490  000041                     	ds	2
   491  000043                     dtoa@n:
   492                           	opt callstack 0
   493                           
   494                           ; 8 bytes @ 0x42
   495  000043                     	ds	8
   496  00004B                     dtoa@i:
   497                           	opt callstack 0
   498                           
   499                           ; 2 bytes @ 0x4A
   500  00004B                     	ds	2
   501  00004D                     ??_vfpfcnvrt:
   502                           
   503                           ; 1 bytes @ 0x4C
   504  00004D                     	ds	2
   505  00004F                     vfprintf@cfmt:
   506                           	opt callstack 0
   507                           
   508                           ; 2 bytes @ 0x4E
   509  00004F                     	ds	2
   510  000051                     ??_main:
   511                           
   512                           ; 1 bytes @ 0x50
   513  000051                     	ds	1
   514                           
   515 ;;
   516 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   517 ;;
   518 ;; *************** function _main *****************
   519 ;; Defined at:
   520 ;;		line 131 in file "main.c"
   521 ;; Parameters:    Size  Location     Type
   522 ;;		None
   523 ;; Auto vars:     Size  Location     Type
   524 ;;  empate          2   30[BANK0 ] int 
   525 ;;  printa_na_te    2   28[BANK0 ] int 
   526 ;; Return value:  Size  Location     Type
   527 ;;                  1    wreg      void 
   528 ;; Registers used:
   529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   530 ;; Tracked objects:
   531 ;;		On entry : 0/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   535 ;;      Params:         0       0       0       0       0       0       0       0       0
   536 ;;      Locals:         0       4       0       0       0       0       0       0       0
   537 ;;      Temps:          1       0       0       0       0       0       0       0       0
   538 ;;      Totals:         1       4       0       0       0       0       0       0       0
   539 ;;Total ram usage:        5 bytes
   540 ;; Hardware stack levels required when called:   15
   541 ;; This function calls:
   542 ;;		_caracter_inicio
   543 ;;		_inicializa_lcd
   544 ;;		_limpa_lcd
   545 ;;		_printf
   546 ;; This function is called by:
   547 ;;		Startup code after reset
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551                           	psect	text0
   552  000B0A                     __ptext0:
   553                           	opt callstack 0
   554  000B0A                     _main:
   555                           	opt callstack 16
   556  000B0A                     
   557                           ;main.c: 133:     TRISBbits.TRISB0 = 1;
   558  000B0A  8093               	bsf	147,0,c	;volatile
   559                           
   560                           ;main.c: 134:     TRISBbits.TRISB1 = 1;
   561  000B0C  8293               	bsf	147,1,c	;volatile
   562                           
   563                           ;main.c: 135:  TRISBbits.TRISB2 = 1;
   564  000B0E  8493               	bsf	147,2,c	;volatile
   565                           
   566                           ;main.c: 139:     TRISAbits.RA0 = 0 ;
   567  000B10  9092               	bcf	146,0,c	;volatile
   568                           
   569                           ;main.c: 140:  TRISAbits.RA1 = 0 ;
   570  000B12  9292               	bcf	146,1,c	;volatile
   571                           
   572                           ;main.c: 141:  TRISAbits.RA2 = 0 ;
   573  000B14  9492               	bcf	146,2,c	;volatile
   574                           
   575                           ;main.c: 142:     TRISAbits.RA3 = 0 ;
   576  000B16  9692               	bcf	146,3,c	;volatile
   577  000B18                     
   578                           ;main.c: 144:     PORTD = 0;
   579  000B18  0E00               	movlw	0
   580  000B1A  6E83               	movwf	131,c	;volatile
   581                           
   582                           ;main.c: 145:     TRISD = 0x00;
   583  000B1C  0E00               	movlw	0
   584  000B1E  6E95               	movwf	149,c	;volatile
   585                           
   586                           ;main.c: 146:     ADCON1 = 0x0F;
   587  000B20  0E0F               	movlw	15
   588  000B22  6EC1               	movwf	193,c	;volatile
   589  000B24                     
   590                           ;main.c: 148:     T2CONbits.T2CKPS1 = 0;
   591  000B24  92CA               	bcf	202,1,c	;volatile
   592  000B26                     
   593                           ;main.c: 149:     T2CONbits.T2CKPS0 = 1;
   594  000B26  80CA               	bsf	202,0,c	;volatile
   595                           
   596                           ;main.c: 150:     PR2 = 250;
   597  000B28  0EFA               	movlw	250
   598  000B2A  6ECB               	movwf	203,c	;volatile
   599  000B2C                     
   600                           ;main.c: 151:     T2CONbits.T2OUTPS3 = 0;
   601  000B2C  9CCA               	bcf	202,6,c	;volatile
   602  000B2E                     
   603                           ;main.c: 152:     T2CONbits.T2OUTPS2 = 0;
   604  000B2E  9ACA               	bcf	202,5,c	;volatile
   605  000B30                     
   606                           ;main.c: 153:     T2CONbits.T2OUTPS1 = 0;
   607  000B30  98CA               	bcf	202,4,c	;volatile
   608  000B32                     
   609                           ;main.c: 154:     T2CONbits.T2OUTPS0 = 1;
   610  000B32  86CA               	bsf	202,3,c	;volatile
   611  000B34                     
   612                           ;main.c: 155:     INT0IE = 1;
   613  000B34  88F2               	bsf	4082,4,c	;volatile
   614  000B36                     
   615                           ;main.c: 157:     PEIE = 1;
   616  000B36  8CF2               	bsf	4082,6,c	;volatile
   617  000B38                     
   618                           ;main.c: 158:     GIE = 1;
   619  000B38  8EF2               	bsf	4082,7,c	;volatile
   620                           
   621                           ;main.c: 159:     TMR2=0;
   622  000B3A  0E00               	movlw	0
   623  000B3C  6ECC               	movwf	204,c	;volatile
   624  000B3E                     
   625                           ;main.c: 161:     T2CONbits.TMR2ON = 1;
   626  000B3E  84CA               	bsf	202,2,c	;volatile
   627                           
   628                           ;main.c: 162:     int printa_na_tela = 0;
   629  000B40  0E00               	movlw	0
   630  000B42  0100               	movlb	0	; () banked
   631  000B44  6FA9               	movwf	(main@printa_na_tela+1)& (0+255),b
   632  000B46  0E00               	movlw	0
   633  000B48  6FA8               	movwf	main@printa_na_tela& (0+255),b
   634                           
   635                           ;main.c: 163:     int empate = 0;
   636  000B4A  0E00               	movlw	0
   637  000B4C  6FAB               	movwf	(main@empate+1)& (0+255),b
   638  000B4E  0E00               	movlw	0
   639  000B50  6FAA               	movwf	main@empate& (0+255),b
   640  000B52  EF18  F006         	goto	l1949
   641  000B56                     l79:
   642                           
   643                           ; BSR set to: 0
   644                           ;main.c: 167:             if (TMR2IF) {
   645  000B56  A29E               	btfss	3998,1,c	;volatile
   646  000B58  EFB0  F005         	goto	u1381
   647  000B5C  EFB2  F005         	goto	u1380
   648  000B60                     u1381:
   649  000B60  EFC9  F005         	goto	l1929
   650  000B64                     u1380:
   651  000B64                     
   652                           ; BSR set to: 0
   653                           ;main.c: 168:                 TMR2IF = 0;
   654  000B64  929E               	bcf	3998,1,c	;volatile
   655  000B66                     
   656                           ; BSR set to: 0
   657                           ;main.c: 169:             if (botao_azul == 0)
   658  000B66  5056               	movf	_botao_azul^0,w,c
   659  000B68  1057               	iorwf	(_botao_azul+1)^0,w,c
   660  000B6A  A4D8               	btfss	status,2,c
   661  000B6C  EFBA  F005         	goto	u1391
   662  000B70  EFBC  F005         	goto	u1390
   663  000B74                     u1391:
   664  000B74  EFBE  F005         	goto	l1925
   665  000B78                     u1390:
   666  000B78                     
   667                           ; BSR set to: 0
   668                           ;main.c: 170:                 tempo_azul++;
   669  000B78  4B68               	infsnz	_tempo_azul& (0+255),f,b
   670  000B7A  2B69               	incf	(_tempo_azul+1)& (0+255),f,b
   671  000B7C                     l1925:
   672                           
   673                           ; BSR set to: 0
   674                           ;main.c: 171:             if (botao_vermelho == 0)
   675  000B7C  5054               	movf	_botao_vermelho^0,w,c
   676  000B7E  1055               	iorwf	(_botao_vermelho+1)^0,w,c
   677  000B80  A4D8               	btfss	status,2,c
   678  000B82  EFC5  F005         	goto	u1401
   679  000B86  EFC7  F005         	goto	u1400
   680  000B8A                     u1401:
   681  000B8A  EFC9  F005         	goto	l1929
   682  000B8E                     u1400:
   683  000B8E                     
   684                           ; BSR set to: 0
   685                           ;main.c: 172:                 tempo_vermelho++;
   686  000B8E  4B66               	infsnz	_tempo_vermelho& (0+255),f,b
   687  000B90  2B67               	incf	(_tempo_vermelho+1)& (0+255),f,b
   688  000B92                     l1929:
   689                           
   690                           ; BSR set to: 0
   691                           ;main.c: 174:             if((botao_azul == 1) && (botao_vermelho == 1)) {
   692  000B92  0456               	decf	_botao_azul^0,w,c
   693  000B94  1057               	iorwf	(_botao_azul+1)^0,w,c
   694  000B96  A4D8               	btfss	status,2,c
   695  000B98  EFD0  F005         	goto	u1411
   696  000B9C  EFD2  F005         	goto	u1410
   697  000BA0                     u1411:
   698  000BA0  EF18  F006         	goto	l1949
   699  000BA4                     u1410:
   700  000BA4                     
   701                           ; BSR set to: 0
   702  000BA4  0454               	decf	_botao_vermelho^0,w,c
   703  000BA6  1055               	iorwf	(_botao_vermelho+1)^0,w,c
   704  000BA8  A4D8               	btfss	status,2,c
   705  000BAA  EFD9  F005         	goto	u1421
   706  000BAE  EFDB  F005         	goto	u1420
   707  000BB2                     u1421:
   708  000BB2  EF18  F006         	goto	l1949
   709  000BB6                     u1420:
   710  000BB6                     
   711                           ; BSR set to: 0
   712                           ;main.c: 175:                 mediador=0;
   713  000BB6  0E00               	movlw	0
   714  000BB8  6F6B               	movwf	(_mediador+1)& (0+255),b
   715  000BBA  0E00               	movlw	0
   716  000BBC  6F6A               	movwf	_mediador& (0+255),b
   717  000BBE                     
   718                           ; BSR set to: 0
   719                           ;main.c: 176:                 if(tempo_azul<tempo_vermelho){
   720  000BBE  5166               	movf	_tempo_vermelho& (0+255),w,b
   721  000BC0  5D68               	subwf	_tempo_azul& (0+255),w,b
   722  000BC2  5169               	movf	(_tempo_azul+1)& (0+255),w,b
   723  000BC4  0A80               	xorlw	128
   724  000BC6  6E51               	movwf	??_main^0,c
   725  000BC8  5167               	movf	(_tempo_vermelho+1)& (0+255),w,b
   726  000BCA  0A80               	xorlw	128
   727  000BCC  5851               	subwfb	??_main^0,w,c
   728  000BCE  B0D8               	btfsc	status,0,c
   729  000BD0  EFEC  F005         	goto	u1431
   730  000BD4  EFEE  F005         	goto	u1430
   731  000BD8                     u1431:
   732  000BD8  EFF1  F005         	goto	l1939
   733  000BDC                     u1430:
   734  000BDC                     
   735                           ; BSR set to: 0
   736                           ;main.c: 177:                     PORTAbits.RA1 = 1;
   737  000BDC  8280               	bsf	128,1,c	;volatile
   738                           
   739                           ;main.c: 178:                 }else if(tempo_azul > tempo_vermelho){
   740  000BDE  EF14  F006         	goto	l85
   741  000BE2                     l1939:
   742                           
   743                           ; BSR set to: 0
   744  000BE2  5168               	movf	_tempo_azul& (0+255),w,b
   745  000BE4  5D66               	subwf	_tempo_vermelho& (0+255),w,b
   746  000BE6  5167               	movf	(_tempo_vermelho+1)& (0+255),w,b
   747  000BE8  0A80               	xorlw	128
   748  000BEA  6E51               	movwf	??_main^0,c
   749  000BEC  5169               	movf	(_tempo_azul+1)& (0+255),w,b
   750  000BEE  0A80               	xorlw	128
   751  000BF0  5851               	subwfb	??_main^0,w,c
   752  000BF2  B0D8               	btfsc	status,0,c
   753  000BF4  EFFE  F005         	goto	u1441
   754  000BF8  EF00  F006         	goto	u1440
   755  000BFC                     u1441:
   756  000BFC  EF03  F006         	goto	l1943
   757  000C00                     u1440:
   758  000C00                     
   759                           ; BSR set to: 0
   760                           ;main.c: 179:                     PORTAbits.RA2 = 1;
   761  000C00  8480               	bsf	128,2,c	;volatile
   762                           
   763                           ;main.c: 180:                 } else if (tempo_azul == tempo_vermelho){
   764  000C02  EF14  F006         	goto	l85
   765  000C06                     l1943:
   766                           
   767                           ; BSR set to: 0
   768  000C06  5166               	movf	_tempo_vermelho& (0+255),w,b
   769  000C08  1968               	xorwf	_tempo_azul& (0+255),w,b
   770  000C0A  E107               	bnz	u1451
   771  000C0C  5167               	movf	(_tempo_vermelho+1)& (0+255),w,b
   772  000C0E  1969               	xorwf	(_tempo_azul+1)& (0+255),w,b
   773  000C10  A4D8               	btfss	status,2,c
   774  000C12  EF0D  F006         	goto	u1451
   775  000C16  EF0F  F006         	goto	u1450
   776  000C1A                     u1451:
   777  000C1A  EF14  F006         	goto	l85
   778  000C1E                     u1450:
   779  000C1E                     
   780                           ; BSR set to: 0
   781                           ;main.c: 181:                     PORTAbits.RA0 = 1;
   782  000C1E  8080               	bsf	128,0,c	;volatile
   783  000C20                     
   784                           ; BSR set to: 0
   785                           ;main.c: 182:                     empate = 1;
   786  000C20  0E00               	movlw	0
   787  000C22  6FAB               	movwf	(main@empate+1)& (0+255),b
   788  000C24  0E01               	movlw	1
   789  000C26  6FAA               	movwf	main@empate& (0+255),b
   790  000C28                     l85:
   791                           
   792                           ; BSR set to: 0
   793                           ;main.c: 184:                 printa_na_tela = 1;
   794  000C28  0E00               	movlw	0
   795  000C2A  6FA9               	movwf	(main@printa_na_tela+1)& (0+255),b
   796  000C2C  0E01               	movlw	1
   797  000C2E  6FA8               	movwf	main@printa_na_tela& (0+255),b
   798  000C30                     l1949:
   799                           
   800                           ; BSR set to: 0
   801                           ;main.c: 166:         while(mediador == 1) {
   802  000C30  056A               	decf	_mediador& (0+255),w,b
   803  000C32  116B               	iorwf	(_mediador+1)& (0+255),w,b
   804  000C34  B4D8               	btfsc	status,2,c
   805  000C36  EF1F  F006         	goto	u1461
   806  000C3A  EF21  F006         	goto	u1460
   807  000C3E                     u1461:
   808  000C3E  EFAB  F005         	goto	l79
   809  000C42                     u1460:
   810  000C42                     
   811                           ; BSR set to: 0
   812                           ;main.c: 188:         if(printa_na_tela){
   813  000C42  51A8               	movf	main@printa_na_tela& (0+255),w,b
   814  000C44  11A9               	iorwf	(main@printa_na_tela+1)& (0+255),w,b
   815  000C46  B4D8               	btfsc	status,2,c
   816  000C48  EF28  F006         	goto	u1471
   817  000C4C  EF2A  F006         	goto	u1470
   818  000C50                     u1471:
   819  000C50  EF18  F006         	goto	l1949
   820  000C54                     u1470:
   821  000C54                     
   822                           ; BSR set to: 0
   823                           ;main.c: 189:             if (empate) {
   824  000C54  51AA               	movf	main@empate& (0+255),w,b
   825  000C56  11AB               	iorwf	(main@empate+1)& (0+255),w,b
   826  000C58  B4D8               	btfsc	status,2,c
   827  000C5A  EF31  F006         	goto	u1481
   828  000C5E  EF33  F006         	goto	u1480
   829  000C62                     u1481:
   830  000C62  EF4E  F006         	goto	l1961
   831  000C66                     u1480:
   832  000C66                     
   833                           ; BSR set to: 0
   834                           ;main.c: 190:                inicializa_lcd();
   835  000C66  EC7D  F00A         	call	_inicializa_lcd	;wreg free
   836                           
   837                           ;main.c: 191:                limpa_lcd();
   838  000C6A  ECBA  F00B         	call	_limpa_lcd	;wreg free
   839                           
   840                           ;main.c: 192:                caracter_inicio(1,1);
   841  000C6E  0E01               	movlw	1
   842  000C70  6E0C               	movwf	caracter_inicio@coluna^0,c
   843  000C72  0E01               	movlw	1
   844  000C74  EC11  F00B         	call	_caracter_inicio
   845  000C78                     
   846                           ;main.c: 193:                printf("Empate = %d ms",tempo_azul);
   847  000C78  0E01               	movlw	low STR_1
   848  000C7A  0100               	movlb	0	; () banked
   849  000C7C  6FA0               	movwf	printf@fmt& (0+255),b
   850  000C7E  0E08               	movlw	high STR_1
   851  000C80  6FA1               	movwf	(printf@fmt+1)& (0+255),b
   852  000C82  C068  F0A2         	movff	_tempo_azul,?_printf+2
   853  000C86  C069  F0A3         	movff	_tempo_azul+1,?_printf+3
   854  000C8A  EC82  F00B         	call	_printf	;wreg free
   855  000C8E                     
   856                           ;main.c: 194:                empate = 0;
   857  000C8E  0E00               	movlw	0
   858  000C90  0100               	movlb	0	; () banked
   859  000C92  6FAB               	movwf	(main@empate+1)& (0+255),b
   860  000C94  0E00               	movlw	0
   861  000C96  6FAA               	movwf	main@empate& (0+255),b
   862                           
   863                           ;main.c: 195:             } else {
   864  000C98  EF72  F006         	goto	l1967
   865  000C9C                     l1961:
   866                           
   867                           ; BSR set to: 0
   868                           ;main.c: 196:                 inicializa_lcd();
   869  000C9C  EC7D  F00A         	call	_inicializa_lcd	;wreg free
   870                           
   871                           ;main.c: 197:                 limpa_lcd();
   872  000CA0  ECBA  F00B         	call	_limpa_lcd	;wreg free
   873                           
   874                           ;main.c: 198:                 caracter_inicio(1,1);
   875  000CA4  0E01               	movlw	1
   876  000CA6  6E0C               	movwf	caracter_inicio@coluna^0,c
   877  000CA8  0E01               	movlw	1
   878  000CAA  EC11  F00B         	call	_caracter_inicio
   879  000CAE                     
   880                           ;main.c: 199:                 printf("Blue = %d ms",tempo_azul);
   881  000CAE  0E1D               	movlw	low STR_2
   882  000CB0  0100               	movlb	0	; () banked
   883  000CB2  6FA0               	movwf	printf@fmt& (0+255),b
   884  000CB4  0E08               	movlw	high STR_2
   885  000CB6  6FA1               	movwf	(printf@fmt+1)& (0+255),b
   886  000CB8  C068  F0A2         	movff	_tempo_azul,?_printf+2
   887  000CBC  C069  F0A3         	movff	_tempo_azul+1,?_printf+3
   888  000CC0  EC82  F00B         	call	_printf	;wreg free
   889  000CC4                     
   890                           ;main.c: 200:                 caracter_inicio(2,1);
   891  000CC4  0E01               	movlw	1
   892  000CC6  6E0C               	movwf	caracter_inicio@coluna^0,c
   893  000CC8  0E02               	movlw	2
   894  000CCA  EC11  F00B         	call	_caracter_inicio
   895                           
   896                           ;main.c: 201:                 printf("Red  = %d ms",tempo_vermelho);
   897  000CCE  0E10               	movlw	low STR_3
   898  000CD0  0100               	movlb	0	; () banked
   899  000CD2  6FA0               	movwf	printf@fmt& (0+255),b
   900  000CD4  0E08               	movlw	high STR_3
   901  000CD6  6FA1               	movwf	(printf@fmt+1)& (0+255),b
   902  000CD8  C066  F0A2         	movff	_tempo_vermelho,?_printf+2
   903  000CDC  C067  F0A3         	movff	_tempo_vermelho+1,?_printf+3
   904  000CE0  EC82  F00B         	call	_printf	;wreg free
   905  000CE4                     l1967:
   906                           
   907                           ;main.c: 203:             printa_na_tela = 0;
   908  000CE4  0E00               	movlw	0
   909  000CE6  0100               	movlb	0	; () banked
   910  000CE8  6FA9               	movwf	(main@printa_na_tela+1)& (0+255),b
   911  000CEA  0E00               	movlw	0
   912  000CEC  6FA8               	movwf	main@printa_na_tela& (0+255),b
   913  000CEE  EF18  F006         	goto	l1949
   914  000CF2  EF07  F000         	goto	start
   915  000CF6                     __end_of_main:
   916                           	opt callstack 0
   917                           
   918 ;; *************** function _printf *****************
   919 ;; Defined at:
   920 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
   923 ;;		 -> STR_3(13), STR_2(13), STR_1(15), 
   924 ;; Auto vars:     Size  Location     Type
   925 ;;  ap              2   26[BANK0 ] PTR void [1]
   926 ;;		 -> ?_printf(2), 
   927 ;;  ret             2    0        int 
   928 ;; Return value:  Size  Location     Type
   929 ;;                  2   20[BANK0 ] int 
   930 ;; Registers used:
   931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   937 ;;      Params:         0       4       0       0       0       0       0       0       0
   938 ;;      Locals:         0       4       0       0       0       0       0       0       0
   939 ;;      Temps:          0       0       0       0       0       0       0       0       0
   940 ;;      Totals:         0       8       0       0       0       0       0       0       0
   941 ;;Total ram usage:        8 bytes
   942 ;; Hardware stack levels used:    1
   943 ;; Hardware stack levels required when called:   14
   944 ;; This function calls:
   945 ;;		_vfprintf
   946 ;; This function is called by:
   947 ;;		_main
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           	psect	text1
   952  001704                     __ptext1:
   953                           	opt callstack 0
   954  001704                     _printf:
   955                           	opt callstack 16
   956  001704  0EA2               	movlw	low (?_printf+2)
   957  001706  0100               	movlb	0	; () banked
   958  001708  6FA6               	movwf	printf@ap& (0+255),b
   959  00170A  0E00               	movlw	high (?_printf+2)
   960  00170C  6FA7               	movwf	(printf@ap+1)& (0+255),b
   961  00170E                     
   962                           ; BSR set to: 0
   963  00170E  0E00               	movlw	0
   964  001710  6F9A               	movwf	vfprintf@fp& (0+255),b
   965  001712  0E00               	movlw	0
   966  001714  6F9B               	movwf	(vfprintf@fp+1)& (0+255),b
   967  001716  C0A0  F09C         	movff	printf@fmt,vfprintf@fmt
   968  00171A  C0A1  F09D         	movff	printf@fmt+1,vfprintf@fmt+1
   969  00171E  0EA6               	movlw	low printf@ap
   970  001720  6F9E               	movwf	vfprintf@ap& (0+255),b
   971  001722  0E00               	movlw	high printf@ap
   972  001724  6F9F               	movwf	(vfprintf@ap+1)& (0+255),b
   973  001726  ECBE  F00A         	call	_vfprintf	;wreg free
   974  00172A  0012               	return		;funcret
   975  00172C                     __end_of_printf:
   976                           	opt callstack 0
   977                           
   978 ;; *************** function _vfprintf *****************
   979 ;; Defined at:
   980 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;  fp              2   14[BANK0 ] PTR struct _IO_FILE
   983 ;;		 -> NULL(0), 
   984 ;;  fmt             2   16[BANK0 ] PTR const unsigned char 
   985 ;;		 -> STR_3(13), STR_2(13), STR_1(15), 
   986 ;;  ap              2   18[BANK0 ] PTR PTR void 
   987 ;;		 -> printf@ap(2), 
   988 ;; Auto vars:     Size  Location     Type
   989 ;;  cfmt            2   78[COMRAM] PTR unsigned char 
   990 ;;		 -> STR_3(13), STR_2(13), STR_1(15), 
   991 ;; Return value:  Size  Location     Type
   992 ;;                  2   14[BANK0 ] int 
   993 ;; Registers used:
   994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1000 ;;      Params:         0       6       0       0       0       0       0       0       0
  1001 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1002 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1003 ;;      Totals:         2       6       0       0       0       0       0       0       0
  1004 ;;Total ram usage:        8 bytes
  1005 ;; Hardware stack levels used:    1
  1006 ;; Hardware stack levels required when called:   13
  1007 ;; This function calls:
  1008 ;;		_vfpfcnvrt
  1009 ;; This function is called by:
  1010 ;;		_printf
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           	psect	text2
  1015  00157C                     __ptext2:
  1016                           	opt callstack 0
  1017  00157C                     _vfprintf:
  1018                           	opt callstack 16
  1019  00157C                     
  1020                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1021  00157C  C09C  F04F         	movff	vfprintf@fmt,vfprintf@cfmt
  1022  001580  C09D  F050         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1023  001584                     
  1024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1025  001584  0E00               	movlw	0
  1026  001586  0100               	movlb	0	; () banked
  1027  001588  6F61               	movwf	(_nout+1)& (0+255),b
  1028  00158A  0E00               	movlw	0
  1029  00158C  6F60               	movwf	_nout& (0+255),b
  1030                           
  1031                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1032  00158E  EFDC  F00A         	goto	l1887
  1033  001592                     l1885:
  1034                           
  1035                           ; BSR set to: 0
  1036                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1037  001592  C09A  F08C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1038  001596  C09B  F08D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1039  00159A  0E4F               	movlw	low vfprintf@cfmt
  1040  00159C  6F8E               	movwf	vfpfcnvrt@fmt& (0+255),b
  1041  00159E  0E00               	movlw	high vfprintf@cfmt
  1042  0015A0  6F8F               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1043  0015A2  C09E  F090         	movff	vfprintf@ap,vfpfcnvrt@ap
  1044  0015A6  C09F  F091         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1045  0015AA  EC7B  F006         	call	_vfpfcnvrt	;wreg free
  1046  0015AE  0100               	movlb	0	; () banked
  1047  0015B0  518C               	movf	?_vfpfcnvrt& (0+255),w,b
  1048  0015B2  2760               	addwf	_nout& (0+255),f,b
  1049  0015B4  518D               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1050  0015B6  2361               	addwfc	(_nout+1)& (0+255),f,b
  1051  0015B8                     l1887:
  1052                           
  1053                           ; BSR set to: 0
  1054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1055  0015B8  C04F  FFF6         	movff	vfprintf@cfmt,tblptrl
  1056  0015BC  C050  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1057  0015C0                     	if	0	;tblptru may be non-zero
  1058  0015C0                     	endif
  1059  0015C0                     	if	0	;tblptru may be non-zero
  1060  0015C0                     	endif
  1061  0015C0  0008               	tblrd		*
  1062  0015C2  50F5               	movf	tablat,w,c
  1063  0015C4  0900               	iorlw	0
  1064  0015C6  A4D8               	btfss	status,2,c
  1065  0015C8  EFE8  F00A         	goto	u1371
  1066  0015CC  EFEA  F00A         	goto	u1370
  1067  0015D0                     u1371:
  1068  0015D0  EFC9  F00A         	goto	l1885
  1069  0015D4                     u1370:
  1070  0015D4                     
  1071                           ; BSR set to: 0
  1072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1073  0015D4  C060  F09A         	movff	_nout,?_vfprintf
  1074  0015D8  C061  F09B         	movff	_nout+1,?_vfprintf+1
  1075  0015DC                     
  1076                           ; BSR set to: 0
  1077  0015DC  0012               	return		;funcret
  1078  0015DE                     __end_of_vfprintf:
  1079                           	opt callstack 0
  1080                           
  1081 ;; *************** function _vfpfcnvrt *****************
  1082 ;; Defined at:
  1083 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1086 ;;		 -> NULL(0), 
  1087 ;;  fmt             2    2[BANK0 ] PTR PTR unsigned char 
  1088 ;;		 -> vfprintf@cfmt(2), 
  1089 ;;  ap              2    4[BANK0 ] PTR PTR void 
  1090 ;;		 -> printf@ap(2), 
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;  ll              8    6[BANK0 ] long long 
  1093 ;;  llu             8    0        unsigned long long 
  1094 ;;  f               4    0        unsigned long long 
  1095 ;;  vp              3    0        PTR void 
  1096 ;;  ct              3    0        unsigned char [3]
  1097 ;;  cp              3    0        PTR unsigned char 
  1098 ;;  i               2    0        int 
  1099 ;;  done            2    0        int 
  1100 ;;  c               1    0        unsigned char 
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  2    0[BANK0 ] int 
  1103 ;; Registers used:
  1104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1110 ;;      Params:         0       6       0       0       0       0       0       0       0
  1111 ;;      Locals:         0       8       0       0       0       0       0       0       0
  1112 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1113 ;;      Totals:         2      14       0       0       0       0       0       0       0
  1114 ;;Total ram usage:       16 bytes
  1115 ;; Hardware stack levels used:    1
  1116 ;; Hardware stack levels required when called:   12
  1117 ;; This function calls:
  1118 ;;		_dtoa
  1119 ;;		_fputc
  1120 ;; This function is called by:
  1121 ;;		_vfprintf
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           	psect	text3
  1126  000CF6                     __ptext3:
  1127                           	opt callstack 0
  1128  000CF6                     _vfpfcnvrt:
  1129                           	opt callstack 16
  1130  000CF6                     
  1131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1132  000CF6  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1133  000CFA  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1134  000CFE  CFDE FFF6          	movff	postinc2,tblptrl
  1135  000D02  CFDD FFF7          	movff	postdec2,tblptrh
  1136  000D06                     	if	0	;tblptru may be non-zero
  1137  000D06                     	endif
  1138  000D06                     	if	0	;tblptru may be non-zero
  1139  000D06                     	endif
  1140  000D06  0008               	tblrd		*
  1141  000D08  50F5               	movf	tablat,w,c
  1142  000D0A  0A25               	xorlw	37
  1143  000D0C  A4D8               	btfss	status,2,c
  1144  000D0E  EF8B  F006         	goto	u1331
  1145  000D12  EF8D  F006         	goto	u1330
  1146  000D16                     u1331:
  1147  000D16  EF3A  F007         	goto	l1873
  1148  000D1A                     u1330:
  1149  000D1A                     
  1150                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1151  000D1A  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1152  000D1E  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1153  000D22  2ADE               	incf	postinc2,f,c
  1154  000D24  0E00               	movlw	0
  1155  000D26  22DD               	addwfc	postdec2,f,c
  1156  000D28                     
  1157                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1158  000D28  0E00               	movlw	0
  1159  000D2A  0100               	movlb	0	; () banked
  1160  000D2C  6F63               	movwf	(_width+1)& (0+255),b
  1161  000D2E  0E00               	movlw	0
  1162  000D30  6F62               	movwf	_width& (0+255),b
  1163  000D32  C062  F052         	movff	_width,_flags
  1164  000D36  C063  F053         	movff	_width+1,_flags+1
  1165  000D3A                     
  1166                           ; BSR set to: 0
  1167                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1168  000D3A  6964               	setf	_prec& (0+255),b
  1169  000D3C  6965               	setf	(_prec+1)& (0+255),b
  1170  000D3E                     
  1171                           ; BSR set to: 0
  1172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1173  000D3E  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1174  000D42  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1175  000D46  CFDE FFF6          	movff	postinc2,tblptrl
  1176  000D4A  CFDD FFF7          	movff	postdec2,tblptrh
  1177  000D4E                     	if	0	;tblptru may be non-zero
  1178  000D4E                     	endif
  1179  000D4E                     	if	0	;tblptru may be non-zero
  1180  000D4E                     	endif
  1181  000D4E  0008               	tblrd		*
  1182  000D50  50F5               	movf	tablat,w,c
  1183  000D52  0A64               	xorlw	100
  1184  000D54  B4D8               	btfsc	status,2,c
  1185  000D56  EFAF  F006         	goto	u1341
  1186  000D5A  EFB1  F006         	goto	u1340
  1187  000D5E                     u1341:
  1188  000D5E  EFC3  F006         	goto	l1851
  1189  000D62                     u1340:
  1190  000D62                     
  1191                           ; BSR set to: 0
  1192  000D62  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1193  000D66  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1194  000D6A  CFDE FFF6          	movff	postinc2,tblptrl
  1195  000D6E  CFDD FFF7          	movff	postdec2,tblptrh
  1196  000D72                     	if	0	;tblptru may be non-zero
  1197  000D72                     	endif
  1198  000D72                     	if	0	;tblptru may be non-zero
  1199  000D72                     	endif
  1200  000D72  0008               	tblrd		*
  1201  000D74  50F5               	movf	tablat,w,c
  1202  000D76  0A69               	xorlw	105
  1203  000D78  A4D8               	btfss	status,2,c
  1204  000D7A  EFC1  F006         	goto	u1351
  1205  000D7E  EFC3  F006         	goto	u1350
  1206  000D82                     u1351:
  1207  000D82  EF03  F007         	goto	l1857
  1208  000D86                     u1350:
  1209  000D86                     l1851:
  1210                           
  1211                           ; BSR set to: 0
  1212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  1213  000D86  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1214  000D8A  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1215  000D8E  2ADE               	incf	postinc2,f,c
  1216  000D90  0E00               	movlw	0
  1217  000D92  22DD               	addwfc	postdec2,f,c
  1218                           
  1219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1220  000D94  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1221  000D98  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1222  000D9C  CFDF F04D          	movff	indf2,??_vfpfcnvrt
  1223  000DA0  0E02               	movlw	2
  1224  000DA2  26DE               	addwf	postinc2,f,c
  1225  000DA4  CFDF F04E          	movff	indf2,??_vfpfcnvrt+1
  1226  000DA8  0E00               	movlw	0
  1227  000DAA  22DD               	addwfc	postdec2,f,c
  1228  000DAC  C04D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1229  000DB0  C04E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1230  000DB4  CFDE F092          	movff	postinc2,vfpfcnvrt@ll
  1231  000DB8  CFDD F093          	movff	postdec2,vfpfcnvrt@ll+1
  1232  000DBC  0E00               	movlw	0
  1233  000DBE  BF93               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  1234  000DC0  0EFF               	movlw	-1
  1235  000DC2  6F94               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  1236  000DC4  6F95               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  1237  000DC6  6F96               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  1238  000DC8  6F97               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  1239  000DCA  6F98               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  1240  000DCC  6F99               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  1241  000DCE                     
  1242                           ; BSR set to: 0
  1243                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  1244  000DCE  C08C  F029         	movff	vfpfcnvrt@fp,dtoa@fp
  1245  000DD2  C08D  F02A         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1246  000DD6  C092  F02B         	movff	vfpfcnvrt@ll,dtoa@d
  1247  000DDA  C093  F02C         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1248  000DDE  C094  F02D         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1249  000DE2  C095  F02E         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1250  000DE6  C096  F02F         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1251  000DEA  C097  F030         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1252  000DEE  C098  F031         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1253  000DF2  C099  F032         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1254  000DF6  EC16  F004         	call	_dtoa	;wreg free
  1255  000DFA  C029  F08C         	movff	?_dtoa,?_vfpfcnvrt
  1256  000DFE  C02A  F08D         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1257  000E02  EF55  F007         	goto	l184
  1258  000E06                     l1857:
  1259                           
  1260                           ; BSR set to: 0
  1261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1262  000E06  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1263  000E0A  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1264  000E0E  CFDE FFF6          	movff	postinc2,tblptrl
  1265  000E12  CFDD FFF7          	movff	postdec2,tblptrh
  1266  000E16                     	if	0	;tblptru may be non-zero
  1267  000E16                     	endif
  1268  000E16                     	if	0	;tblptru may be non-zero
  1269  000E16                     	endif
  1270  000E16  0008               	tblrd		*
  1271  000E18  50F5               	movf	tablat,w,c
  1272  000E1A  0A25               	xorlw	37
  1273  000E1C  A4D8               	btfss	status,2,c
  1274  000E1E  EF13  F007         	goto	u1361
  1275  000E22  EF15  F007         	goto	u1360
  1276  000E26                     u1361:
  1277  000E26  EF2D  F007         	goto	l1867
  1278  000E2A                     u1360:
  1279  000E2A                     
  1280                           ; BSR set to: 0
  1281                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1282  000E2A  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1283  000E2E  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1284  000E32  2ADE               	incf	postinc2,f,c
  1285  000E34  0E00               	movlw	0
  1286  000E36  22DD               	addwfc	postdec2,f,c
  1287  000E38                     
  1288                           ; BSR set to: 0
  1289                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1290  000E38  0E00               	movlw	0
  1291  000E3A  6E0F               	movwf	(fputc@c+1)^0,c
  1292  000E3C  0E25               	movlw	37
  1293  000E3E  6E0E               	movwf	fputc@c^0,c
  1294  000E40  C08C  F010         	movff	vfpfcnvrt@fp,fputc@fp
  1295  000E44  C08D  F011         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1296  000E48  ECAA  F009         	call	_fputc	;wreg free
  1297  000E4C                     l1863:
  1298                           
  1299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1300  000E4C  0E00               	movlw	0
  1301  000E4E  0100               	movlb	0	; () banked
  1302  000E50  6F8D               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1303  000E52  0E01               	movlw	1
  1304  000E54  6F8C               	movwf	?_vfpfcnvrt& (0+255),b
  1305  000E56  EF55  F007         	goto	l184
  1306  000E5A                     l1867:
  1307                           
  1308                           ; BSR set to: 0
  1309                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1310  000E5A  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1311  000E5E  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1312  000E62  2ADE               	incf	postinc2,f,c
  1313  000E64  0E00               	movlw	0
  1314  000E66  22DD               	addwfc	postdec2,f,c
  1315  000E68                     
  1316                           ; BSR set to: 0
  1317                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1318  000E68  0E00               	movlw	0
  1319  000E6A  6F8D               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1320  000E6C  0E00               	movlw	0
  1321  000E6E  6F8C               	movwf	?_vfpfcnvrt& (0+255),b
  1322  000E70  EF55  F007         	goto	l184
  1323  000E74                     l1873:
  1324                           
  1325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1326  000E74  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1327  000E78  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1328  000E7C  CFDE FFF6          	movff	postinc2,tblptrl
  1329  000E80  CFDD FFF7          	movff	postdec2,tblptrh
  1330  000E84                     	if	0	;tblptru may be non-zero
  1331  000E84                     	endif
  1332  000E84                     	if	0	;tblptru may be non-zero
  1333  000E84                     	endif
  1334  000E84  0008               	tblrd		*
  1335  000E86  50F5               	movf	tablat,w,c
  1336  000E88  6E0E               	movwf	fputc@c^0,c
  1337  000E8A  6A0F               	clrf	(fputc@c+1)^0,c
  1338  000E8C  C08C  F010         	movff	vfpfcnvrt@fp,fputc@fp
  1339  000E90  C08D  F011         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1340  000E94  ECAA  F009         	call	_fputc	;wreg free
  1341  000E98                     
  1342                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1343  000E98  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1344  000E9C  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1345  000EA0  2ADE               	incf	postinc2,f,c
  1346  000EA2  0E00               	movlw	0
  1347  000EA4  22DD               	addwfc	postdec2,f,c
  1348  000EA6  EF26  F007         	goto	l1863
  1349  000EAA                     l184:
  1350  000EAA  0012               	return		;funcret
  1351  000EAC                     __end_of_vfpfcnvrt:
  1352                           	opt callstack 0
  1353                           
  1354 ;; *************** function _dtoa *****************
  1355 ;; Defined at:
  1356 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;  fp              2   40[COMRAM] PTR struct _IO_FILE
  1359 ;;		 -> NULL(0), 
  1360 ;;  d               8   42[COMRAM] long long 
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;  n               8   66[COMRAM] long long 
  1363 ;;  i               2   74[COMRAM] int 
  1364 ;;  s               2   64[COMRAM] int 
  1365 ;;  w               2   62[COMRAM] int 
  1366 ;;  p               2   60[COMRAM] int 
  1367 ;; Return value:  Size  Location     Type
  1368 ;;                  2   40[COMRAM] int 
  1369 ;; Registers used:
  1370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1371 ;; Tracked objects:
  1372 ;;		On entry : 0/0
  1373 ;;		On exit  : 0/0
  1374 ;;		Unchanged: 0/0
  1375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1376 ;;      Params:        10       0       0       0       0       0       0       0       0
  1377 ;;      Locals:        18       0       0       0       0       0       0       0       0
  1378 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1379 ;;      Totals:        36       0       0       0       0       0       0       0       0
  1380 ;;Total ram usage:       36 bytes
  1381 ;; Hardware stack levels used:    1
  1382 ;; Hardware stack levels required when called:   11
  1383 ;; This function calls:
  1384 ;;		___aodiv
  1385 ;;		___aomod
  1386 ;;		_abs
  1387 ;;		_pad
  1388 ;; This function is called by:
  1389 ;;		_vfpfcnvrt
  1390 ;; This function uses a non-reentrant model
  1391 ;;
  1392                           
  1393                           	psect	text4
  1394  00082C                     __ptext4:
  1395                           	opt callstack 0
  1396  00082C                     _dtoa:
  1397                           	opt callstack 16
  1398  00082C                     
  1399                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  1400  00082C  C02B  F043         	movff	dtoa@d,dtoa@n
  1401  000830  C02C  F044         	movff	dtoa@d+1,dtoa@n+1
  1402  000834  C02D  F045         	movff	dtoa@d+2,dtoa@n+2
  1403  000838  C02E  F046         	movff	dtoa@d+3,dtoa@n+3
  1404  00083C  C02F  F047         	movff	dtoa@d+4,dtoa@n+4
  1405  000840  C030  F048         	movff	dtoa@d+5,dtoa@n+5
  1406  000844  C031  F049         	movff	dtoa@d+6,dtoa@n+6
  1407  000848  C032  F04A         	movff	dtoa@d+7,dtoa@n+7
  1408  00084C                     
  1409                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  1410  00084C  BE4A               	btfsc	(dtoa@n+7)^0,7,c
  1411  00084E  EF2B  F004         	goto	u921
  1412  000852  EF2E  F004         	goto	u920
  1413  000856                     u921:
  1414  000856  0E01               	movlw	1
  1415  000858  EF2F  F004         	goto	u930
  1416  00085C                     u920:
  1417  00085C  0E00               	movlw	0
  1418  00085E                     u930:
  1419  00085E  6E41               	movwf	dtoa@s^0,c
  1420  000860  6A42               	clrf	(dtoa@s+1)^0,c
  1421                           
  1422                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  1423  000862  5041               	movf	dtoa@s^0,w,c
  1424  000864  1042               	iorwf	(dtoa@s+1)^0,w,c
  1425  000866  B4D8               	btfsc	status,2,c
  1426  000868  EF38  F004         	goto	u941
  1427  00086C  EF3A  F004         	goto	u940
  1428  000870                     u941:
  1429  000870  EF4A  F004         	goto	l1539
  1430  000874                     u940:
  1431  000874                     
  1432                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  1433  000874  1E4A               	comf	(dtoa@n+7)^0,f,c
  1434  000876  1E49               	comf	(dtoa@n+6)^0,f,c
  1435  000878  1E48               	comf	(dtoa@n+5)^0,f,c
  1436  00087A  1E47               	comf	(dtoa@n+4)^0,f,c
  1437  00087C  1E46               	comf	(dtoa@n+3)^0,f,c
  1438  00087E  1E45               	comf	(dtoa@n+2)^0,f,c
  1439  000880  1E44               	comf	(dtoa@n+1)^0,f,c
  1440  000882  6C43               	negf	dtoa@n^0,c
  1441  000884  0E00               	movlw	0
  1442  000886  2244               	addwfc	(dtoa@n+1)^0,f,c
  1443  000888  2245               	addwfc	(dtoa@n+2)^0,f,c
  1444  00088A  2246               	addwfc	(dtoa@n+3)^0,f,c
  1445  00088C  2247               	addwfc	(dtoa@n+4)^0,f,c
  1446  00088E  2248               	addwfc	(dtoa@n+5)^0,f,c
  1447  000890  2249               	addwfc	(dtoa@n+6)^0,f,c
  1448  000892  224A               	addwfc	(dtoa@n+7)^0,f,c
  1449  000894                     l1539:
  1450                           
  1451                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  1452  000894  0100               	movlb	0	; () banked
  1453  000896  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1454  000898  EF50  F004         	goto	u951
  1455  00089C  EF52  F004         	goto	u950
  1456  0008A0                     u951:
  1457  0008A0  EF53  F004         	goto	l1543
  1458  0008A4                     u950:
  1459  0008A4                     
  1460                           ; BSR set to: 0
  1461                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  1462  0008A4  9252               	bcf	_flags^0,1,c
  1463  0008A6                     l1543:
  1464                           
  1465                           ; BSR set to: 0
  1466                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  1467  0008A6  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1468  0008A8  EF60  F004         	goto	u960
  1469  0008AC  5165               	movf	(_prec+1)& (0+255),w,b
  1470  0008AE  E106               	bnz	u961
  1471  0008B0  0564               	decf	_prec& (0+255),w,b
  1472  0008B2  B0D8               	btfsc	status,0,c
  1473  0008B4  EF5E  F004         	goto	u961
  1474  0008B8  EF60  F004         	goto	u960
  1475  0008BC                     u961:
  1476  0008BC  EF66  F004         	goto	l157
  1477  0008C0                     u960:
  1478  0008C0                     
  1479                           ; BSR set to: 0
  1480  0008C0  0E00               	movlw	0
  1481  0008C2  6E3E               	movwf	(dtoa@p+1)^0,c
  1482  0008C4  0E01               	movlw	1
  1483  0008C6  6E3D               	movwf	dtoa@p^0,c
  1484  0008C8  EF6A  F004         	goto	l159
  1485  0008CC                     l157:
  1486                           
  1487                           ; BSR set to: 0
  1488  0008CC  C064  F03D         	movff	_prec,dtoa@p
  1489  0008D0  C065  F03E         	movff	_prec+1,dtoa@p+1
  1490  0008D4                     l159:
  1491                           
  1492                           ; BSR set to: 0
  1493                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  1494  0008D4  C062  F03F         	movff	_width,dtoa@w
  1495  0008D8  C063  F040         	movff	_width+1,dtoa@w+1
  1496  0008DC                     
  1497                           ; BSR set to: 0
  1498                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  1499  0008DC  5041               	movf	dtoa@s^0,w,c
  1500  0008DE  1042               	iorwf	(dtoa@s+1)^0,w,c
  1501  0008E0  A4D8               	btfss	status,2,c
  1502  0008E2  EF75  F004         	goto	u971
  1503  0008E6  EF77  F004         	goto	u970
  1504  0008EA                     u971:
  1505  0008EA  EF7E  F004         	goto	l1551
  1506  0008EE                     u970:
  1507  0008EE                     
  1508                           ; BSR set to: 0
  1509  0008EE  A452               	btfss	_flags^0,2,c
  1510  0008F0  EF7C  F004         	goto	u981
  1511  0008F4  EF7E  F004         	goto	u980
  1512  0008F8                     u981:
  1513  0008F8  EF81  F004         	goto	l1553
  1514  0008FC                     u980:
  1515  0008FC                     l1551:
  1516                           
  1517                           ; BSR set to: 0
  1518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  1519  0008FC  063F               	decf	dtoa@w^0,f,c
  1520  0008FE  A0D8               	btfss	status,0,c
  1521  000900  0640               	decf	(dtoa@w+1)^0,f,c
  1522  000902                     l1553:
  1523                           
  1524                           ; BSR set to: 0
  1525                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  1526  000902  0E00               	movlw	0
  1527  000904  6E4C               	movwf	(dtoa@i+1)^0,c
  1528  000906  0E1F               	movlw	31
  1529  000908  6E4B               	movwf	dtoa@i^0,c
  1530  00090A                     
  1531                           ; BSR set to: 0
  1532                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  1533  00090A  0E00               	movlw	0
  1534  00090C  6F8B               	movwf	(_dbuf+31)& (0+255),b
  1535                           
  1536                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1537  00090E  EF05  F005         	goto	l1567
  1538  000912                     l1557:
  1539                           
  1540                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  1541  000912  064B               	decf	dtoa@i^0,f,c
  1542  000914  A0D8               	btfss	status,0,c
  1543  000916  064C               	decf	(dtoa@i+1)^0,f,c
  1544  000918                     
  1545                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  1546  000918  0E6C               	movlw	low _dbuf
  1547  00091A  244B               	addwf	dtoa@i^0,w,c
  1548  00091C  6ED9               	movwf	fsr2l,c
  1549  00091E  0E00               	movlw	high _dbuf
  1550  000920  204C               	addwfc	(dtoa@i+1)^0,w,c
  1551  000922  6EDA               	movwf	fsr2h,c
  1552  000924  C043  F008         	movff	dtoa@n,___aomod@dividend
  1553  000928  C044  F009         	movff	dtoa@n+1,___aomod@dividend+1
  1554  00092C  C045  F00A         	movff	dtoa@n+2,___aomod@dividend+2
  1555  000930  C046  F00B         	movff	dtoa@n+3,___aomod@dividend+3
  1556  000934  C047  F00C         	movff	dtoa@n+4,___aomod@dividend+4
  1557  000938  C048  F00D         	movff	dtoa@n+5,___aomod@dividend+5
  1558  00093C  C049  F00E         	movff	dtoa@n+6,___aomod@dividend+6
  1559  000940  C04A  F00F         	movff	dtoa@n+7,___aomod@dividend+7
  1560  000944  0E0A               	movlw	10
  1561  000946  6E10               	movwf	___aomod@divisor^0,c
  1562  000948  0E00               	movlw	0
  1563  00094A  6E11               	movwf	(___aomod@divisor+1)^0,c
  1564  00094C  0E00               	movlw	0
  1565  00094E  6E12               	movwf	(___aomod@divisor+2)^0,c
  1566  000950  0E00               	movlw	0
  1567  000952  6E13               	movwf	(___aomod@divisor+3)^0,c
  1568  000954  0E00               	movlw	0
  1569  000956  6E14               	movwf	(___aomod@divisor+4)^0,c
  1570  000958  0E00               	movlw	0
  1571  00095A  6E15               	movwf	(___aomod@divisor+5)^0,c
  1572  00095C  0E00               	movlw	0
  1573  00095E  6E16               	movwf	(___aomod@divisor+6)^0,c
  1574  000960  0E00               	movlw	0
  1575  000962  6E17               	movwf	(___aomod@divisor+7)^0,c
  1576  000964  EC1A  F008         	call	___aomod	;wreg free
  1577  000968  C008  F033         	movff	?___aomod,??_dtoa
  1578  00096C  C009  F034         	movff	?___aomod+1,??_dtoa+1
  1579  000970  C00A  F035         	movff	?___aomod+2,??_dtoa+2
  1580  000974  C00B  F036         	movff	?___aomod+3,??_dtoa+3
  1581  000978  C00C  F037         	movff	?___aomod+4,??_dtoa+4
  1582  00097C  C00D  F038         	movff	?___aomod+5,??_dtoa+5
  1583  000980  C00E  F039         	movff	?___aomod+6,??_dtoa+6
  1584  000984  C00F  F03A         	movff	?___aomod+7,??_dtoa+7
  1585  000988  C033  F01A         	movff	??_dtoa,abs@a
  1586  00098C  C035  F01B         	movff	??_dtoa+2,abs@a+1
  1587  000990  EC32  F00B         	call	_abs	;wreg free
  1588  000994  501A               	movf	?_abs^0,w,c
  1589  000996  0F30               	addlw	48
  1590  000998  6EDF               	movwf	indf2,c
  1591  00099A                     
  1592                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  1593  00099A  063D               	decf	dtoa@p^0,f,c
  1594  00099C  A0D8               	btfss	status,0,c
  1595  00099E  063E               	decf	(dtoa@p+1)^0,f,c
  1596  0009A0                     
  1597                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  1598  0009A0  063F               	decf	dtoa@w^0,f,c
  1599  0009A2  A0D8               	btfss	status,0,c
  1600  0009A4  0640               	decf	(dtoa@w+1)^0,f,c
  1601  0009A6                     
  1602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  1603  0009A6  C043  F008         	movff	dtoa@n,___aodiv@dividend
  1604  0009AA  C044  F009         	movff	dtoa@n+1,___aodiv@dividend+1
  1605  0009AE  C045  F00A         	movff	dtoa@n+2,___aodiv@dividend+2
  1606  0009B2  C046  F00B         	movff	dtoa@n+3,___aodiv@dividend+3
  1607  0009B6  C047  F00C         	movff	dtoa@n+4,___aodiv@dividend+4
  1608  0009BA  C048  F00D         	movff	dtoa@n+5,___aodiv@dividend+5
  1609  0009BE  C049  F00E         	movff	dtoa@n+6,___aodiv@dividend+6
  1610  0009C2  C04A  F00F         	movff	dtoa@n+7,___aodiv@dividend+7
  1611  0009C6  0E0A               	movlw	10
  1612  0009C8  6E10               	movwf	___aodiv@divisor^0,c
  1613  0009CA  0E00               	movlw	0
  1614  0009CC  6E11               	movwf	(___aodiv@divisor+1)^0,c
  1615  0009CE  0E00               	movlw	0
  1616  0009D0  6E12               	movwf	(___aodiv@divisor+2)^0,c
  1617  0009D2  0E00               	movlw	0
  1618  0009D4  6E13               	movwf	(___aodiv@divisor+3)^0,c
  1619  0009D6  0E00               	movlw	0
  1620  0009D8  6E14               	movwf	(___aodiv@divisor+4)^0,c
  1621  0009DA  0E00               	movlw	0
  1622  0009DC  6E15               	movwf	(___aodiv@divisor+5)^0,c
  1623  0009DE  0E00               	movlw	0
  1624  0009E0  6E16               	movwf	(___aodiv@divisor+6)^0,c
  1625  0009E2  0E00               	movlw	0
  1626  0009E4  6E17               	movwf	(___aodiv@divisor+7)^0,c
  1627  0009E6  EC56  F007         	call	___aodiv	;wreg free
  1628  0009EA  C008  F043         	movff	?___aodiv,dtoa@n
  1629  0009EE  C009  F044         	movff	?___aodiv+1,dtoa@n+1
  1630  0009F2  C00A  F045         	movff	?___aodiv+2,dtoa@n+2
  1631  0009F6  C00B  F046         	movff	?___aodiv+3,dtoa@n+3
  1632  0009FA  C00C  F047         	movff	?___aodiv+4,dtoa@n+4
  1633  0009FE  C00D  F048         	movff	?___aodiv+5,dtoa@n+5
  1634  000A02  C00E  F049         	movff	?___aodiv+6,dtoa@n+6
  1635  000A06  C00F  F04A         	movff	?___aodiv+7,dtoa@n+7
  1636  000A0A                     l1567:
  1637                           
  1638                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1639  000A0A  BE4C               	btfsc	(dtoa@i+1)^0,7,c
  1640  000A0C  EF10  F005         	goto	u991
  1641  000A10  504C               	movf	(dtoa@i+1)^0,w,c
  1642  000A12  E108               	bnz	u990
  1643  000A14  044B               	decf	dtoa@i^0,w,c
  1644  000A16  A0D8               	btfss	status,0,c
  1645  000A18  EF10  F005         	goto	u991
  1646  000A1C  EF12  F005         	goto	u990
  1647  000A20                     u991:
  1648  000A20  EF42  F005         	goto	l1577
  1649  000A24                     u990:
  1650  000A24  5043               	movf	dtoa@n^0,w,c
  1651  000A26  1044               	iorwf	(dtoa@n+1)^0,w,c
  1652  000A28  1045               	iorwf	(dtoa@n+2)^0,w,c
  1653  000A2A  1046               	iorwf	(dtoa@n+3)^0,w,c
  1654  000A2C  1047               	iorwf	(dtoa@n+4)^0,w,c
  1655  000A2E  1048               	iorwf	(dtoa@n+5)^0,w,c
  1656  000A30  1049               	iorwf	(dtoa@n+6)^0,w,c
  1657  000A32  104A               	iorwf	(dtoa@n+7)^0,w,c
  1658  000A34  A4D8               	btfss	status,2,c
  1659  000A36  EF1F  F005         	goto	u1001
  1660  000A3A  EF21  F005         	goto	u1000
  1661  000A3E                     u1001:
  1662  000A3E  EF89  F004         	goto	l1557
  1663  000A42                     u1000:
  1664  000A42  BE3E               	btfsc	(dtoa@p+1)^0,7,c
  1665  000A44  EF2E  F005         	goto	u1010
  1666  000A48  503E               	movf	(dtoa@p+1)^0,w,c
  1667  000A4A  E106               	bnz	u1011
  1668  000A4C  043D               	decf	dtoa@p^0,w,c
  1669  000A4E  B0D8               	btfsc	status,0,c
  1670  000A50  EF2C  F005         	goto	u1011
  1671  000A54  EF2E  F005         	goto	u1010
  1672  000A58                     u1011:
  1673  000A58  EF89  F004         	goto	l1557
  1674  000A5C                     u1010:
  1675  000A5C  BE40               	btfsc	(dtoa@w+1)^0,7,c
  1676  000A5E  EF39  F005         	goto	u1021
  1677  000A62  5040               	movf	(dtoa@w+1)^0,w,c
  1678  000A64  E108               	bnz	u1020
  1679  000A66  043F               	decf	dtoa@w^0,w,c
  1680  000A68  A0D8               	btfss	status,0,c
  1681  000A6A  EF39  F005         	goto	u1021
  1682  000A6E  EF3B  F005         	goto	u1020
  1683  000A72                     u1021:
  1684  000A72  EF42  F005         	goto	l1577
  1685  000A76                     u1020:
  1686  000A76  B252               	btfsc	_flags^0,1,c
  1687  000A78  EF40  F005         	goto	u1031
  1688  000A7C  EF42  F005         	goto	u1030
  1689  000A80                     u1031:
  1690  000A80  EF89  F004         	goto	l1557
  1691  000A84                     u1030:
  1692  000A84                     l1577:
  1693                           
  1694                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  1695  000A84  5041               	movf	dtoa@s^0,w,c
  1696  000A86  1042               	iorwf	(dtoa@s+1)^0,w,c
  1697  000A88  A4D8               	btfss	status,2,c
  1698  000A8A  EF49  F005         	goto	u1041
  1699  000A8E  EF4B  F005         	goto	u1040
  1700  000A92                     u1041:
  1701  000A92  EF52  F005         	goto	l1581
  1702  000A96                     u1040:
  1703  000A96  A452               	btfss	_flags^0,2,c
  1704  000A98  EF50  F005         	goto	u1051
  1705  000A9C  EF52  F005         	goto	u1050
  1706  000AA0                     u1051:
  1707  000AA0  EF70  F005         	goto	l1591
  1708  000AA4                     u1050:
  1709  000AA4                     l1581:
  1710                           
  1711                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  1712  000AA4  064B               	decf	dtoa@i^0,f,c
  1713  000AA6  A0D8               	btfss	status,0,c
  1714  000AA8  064C               	decf	(dtoa@i+1)^0,f,c
  1715  000AAA                     
  1716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  1717  000AAA  5041               	movf	dtoa@s^0,w,c
  1718  000AAC  1042               	iorwf	(dtoa@s+1)^0,w,c
  1719  000AAE  A4D8               	btfss	status,2,c
  1720  000AB0  EF5C  F005         	goto	u1061
  1721  000AB4  EF5E  F005         	goto	u1060
  1722  000AB8                     u1061:
  1723  000AB8  EF64  F005         	goto	l1587
  1724  000ABC                     u1060:
  1725  000ABC  0E00               	movlw	0
  1726  000ABE  6E3C               	movwf	(_dtoa$421+1)^0,c
  1727  000AC0  0E2B               	movlw	43
  1728  000AC2  6E3B               	movwf	_dtoa$421^0,c
  1729  000AC4  EF68  F005         	goto	l1589
  1730  000AC8                     l1587:
  1731  000AC8  0E00               	movlw	0
  1732  000ACA  6E3C               	movwf	(_dtoa$421+1)^0,c
  1733  000ACC  0E2D               	movlw	45
  1734  000ACE  6E3B               	movwf	_dtoa$421^0,c
  1735  000AD0                     l1589:
  1736  000AD0  0E6C               	movlw	low _dbuf
  1737  000AD2  244B               	addwf	dtoa@i^0,w,c
  1738  000AD4  6ED9               	movwf	fsr2l,c
  1739  000AD6  0E00               	movlw	high _dbuf
  1740  000AD8  204C               	addwfc	(dtoa@i+1)^0,w,c
  1741  000ADA  6EDA               	movwf	fsr2h,c
  1742  000ADC  C03B  FFDF         	movff	_dtoa$421,indf2
  1743  000AE0                     l1591:
  1744                           
  1745                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  1746  000AE0  C029  F01E         	movff	dtoa@fp,pad@fp
  1747  000AE4  C02A  F01F         	movff	dtoa@fp+1,pad@fp+1
  1748  000AE8  0E6C               	movlw	low _dbuf
  1749  000AEA  244B               	addwf	dtoa@i^0,w,c
  1750  000AEC  6E20               	movwf	pad@buf^0,c
  1751  000AEE  0E00               	movlw	high _dbuf
  1752  000AF0  204C               	addwfc	(dtoa@i+1)^0,w,c
  1753  000AF2  6E21               	movwf	(pad@buf+1)^0,c
  1754  000AF4  C03F  F022         	movff	dtoa@w,pad@p
  1755  000AF8  C040  F023         	movff	dtoa@w+1,pad@p+1
  1756  000AFC  EC49  F009         	call	_pad	;wreg free
  1757  000B00  C01E  F029         	movff	?_pad,?_dtoa
  1758  000B04  C01F  F02A         	movff	?_pad+1,?_dtoa+1
  1759  000B08  0012               	return		;funcret
  1760  000B0A                     __end_of_dtoa:
  1761                           	opt callstack 0
  1762                           
  1763 ;; *************** function _pad *****************
  1764 ;; Defined at:
  1765 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  1768 ;;		 -> NULL(0), 
  1769 ;;  buf             2   31[COMRAM] PTR unsigned char 
  1770 ;;		 -> dbuf(32), 
  1771 ;;  p               2   33[COMRAM] int 
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;  w               2   38[COMRAM] int 
  1774 ;;  i               2   36[COMRAM] int 
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  2   29[COMRAM] int 
  1777 ;; Registers used:
  1778 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1784 ;;      Params:         6       0       0       0       0       0       0       0       0
  1785 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1786 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1787 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1788 ;;Total ram usage:       11 bytes
  1789 ;; Hardware stack levels used:    1
  1790 ;; Hardware stack levels required when called:   10
  1791 ;; This function calls:
  1792 ;;		_fputc
  1793 ;;		_fputs
  1794 ;;		_strlen
  1795 ;; This function is called by:
  1796 ;;		_dtoa
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           	psect	text5
  1801  001292                     __ptext5:
  1802                           	opt callstack 0
  1803  001292                     _pad:
  1804                           	opt callstack 16
  1805  001292                     
  1806                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  1807  001292  A052               	btfss	_flags^0,0,c
  1808  001294  EF4E  F009         	goto	u741
  1809  001298  EF50  F009         	goto	u740
  1810  00129C                     u741:
  1811  00129C  EF5A  F009         	goto	l1431
  1812  0012A0                     u740:
  1813  0012A0                     
  1814                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  1815  0012A0  C020  F017         	movff	pad@buf,fputs@s
  1816  0012A4  C021  F018         	movff	pad@buf+1,fputs@s+1
  1817  0012A8  C01E  F019         	movff	pad@fp,fputs@fp
  1818  0012AC  C01F  F01A         	movff	pad@fp+1,fputs@fp+1
  1819  0012B0  ECEF  F00A         	call	_fputs	;wreg free
  1820  0012B4                     l1431:
  1821                           
  1822                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  1823  0012B4  BE23               	btfsc	(pad@p+1)^0,7,c
  1824  0012B6  EF5F  F009         	goto	u751
  1825  0012BA  EF61  F009         	goto	u750
  1826  0012BE                     u751:
  1827  0012BE  EF67  F009         	goto	l1435
  1828  0012C2                     u750:
  1829  0012C2  C022  F027         	movff	pad@p,pad@w
  1830  0012C6  C023  F028         	movff	pad@p+1,pad@w+1
  1831  0012CA  EF6B  F009         	goto	l146
  1832  0012CE                     l1435:
  1833  0012CE  0E00               	movlw	0
  1834  0012D0  6E28               	movwf	(pad@w+1)^0,c
  1835  0012D2  0E00               	movlw	0
  1836  0012D4  6E27               	movwf	pad@w^0,c
  1837  0012D6                     l146:
  1838                           
  1839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  1840  0012D6  0E00               	movlw	0
  1841  0012D8  6E26               	movwf	(pad@i+1)^0,c
  1842  0012DA  0E00               	movlw	0
  1843  0012DC  6E25               	movwf	pad@i^0,c
  1844                           
  1845                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1846  0012DE  EF7D  F009         	goto	l1441
  1847  0012E2                     l1437:
  1848                           
  1849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  1850  0012E2  0E00               	movlw	0
  1851  0012E4  6E0F               	movwf	(fputc@c+1)^0,c
  1852  0012E6  0E20               	movlw	32
  1853  0012E8  6E0E               	movwf	fputc@c^0,c
  1854  0012EA  C01E  F010         	movff	pad@fp,fputc@fp
  1855  0012EE  C01F  F011         	movff	pad@fp+1,fputc@fp+1
  1856  0012F2  ECAA  F009         	call	_fputc	;wreg free
  1857  0012F6                     
  1858                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  1859  0012F6  4A25               	infsnz	pad@i^0,f,c
  1860  0012F8  2A26               	incf	(pad@i+1)^0,f,c
  1861  0012FA                     l1441:
  1862                           
  1863                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1864  0012FA  5027               	movf	pad@w^0,w,c
  1865  0012FC  5C25               	subwf	pad@i^0,w,c
  1866  0012FE  5026               	movf	(pad@i+1)^0,w,c
  1867  001300  0A80               	xorlw	128
  1868  001302  6E24               	movwf	??_pad^0,c
  1869  001304  5028               	movf	(pad@w+1)^0,w,c
  1870  001306  0A80               	xorlw	128
  1871  001308  5824               	subwfb	??_pad^0,w,c
  1872  00130A  A0D8               	btfss	status,0,c
  1873  00130C  EF8A  F009         	goto	u761
  1874  001310  EF8C  F009         	goto	u760
  1875  001314                     u761:
  1876  001314  EF71  F009         	goto	l1437
  1877  001318                     u760:
  1878  001318                     
  1879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  1880  001318  B052               	btfsc	_flags^0,0,c
  1881  00131A  EF91  F009         	goto	u771
  1882  00131E  EF93  F009         	goto	u770
  1883  001322                     u771:
  1884  001322  EF9D  F009         	goto	l1445
  1885  001326                     u770:
  1886  001326                     
  1887                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  1888  001326  C020  F017         	movff	pad@buf,fputs@s
  1889  00132A  C021  F018         	movff	pad@buf+1,fputs@s+1
  1890  00132E  C01E  F019         	movff	pad@fp,fputs@fp
  1891  001332  C01F  F01A         	movff	pad@fp+1,fputs@fp+1
  1892  001336  ECEF  F00A         	call	_fputs	;wreg free
  1893  00133A                     l1445:
  1894                           
  1895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  1896  00133A  C020  F008         	movff	pad@buf,strlen@s
  1897  00133E  C021  F009         	movff	pad@buf+1,strlen@s+1
  1898  001342  EC52  F00B         	call	_strlen	;wreg free
  1899  001346  5027               	movf	pad@w^0,w,c
  1900  001348  2408               	addwf	?_strlen^0,w,c
  1901  00134A  6E1E               	movwf	?_pad^0,c
  1902  00134C  5028               	movf	(pad@w+1)^0,w,c
  1903  00134E  2009               	addwfc	(?_strlen+1)^0,w,c
  1904  001350  6E1F               	movwf	(?_pad+1)^0,c
  1905  001352  0012               	return		;funcret
  1906  001354                     __end_of_pad:
  1907                           	opt callstack 0
  1908                           
  1909 ;; *************** function _strlen *****************
  1910 ;; Defined at:
  1911 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;  s               2    7[COMRAM] PTR const unsigned char 
  1914 ;;		 -> dbuf(32), 
  1915 ;; Auto vars:     Size  Location     Type
  1916 ;;  a               2    9[COMRAM] PTR const unsigned char 
  1917 ;;		 -> dbuf(32), 
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  2    7[COMRAM] unsigned int 
  1920 ;; Registers used:
  1921 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1927 ;;      Params:         2       0       0       0       0       0       0       0       0
  1928 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1929 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1930 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1931 ;;Total ram usage:        4 bytes
  1932 ;; Hardware stack levels used:    1
  1933 ;; Hardware stack levels required when called:    4
  1934 ;; This function calls:
  1935 ;;		Nothing
  1936 ;; This function is called by:
  1937 ;;		_pad
  1938 ;; This function uses a non-reentrant model
  1939 ;;
  1940                           
  1941                           	psect	text6
  1942  0016A4                     __ptext6:
  1943                           	opt callstack 0
  1944  0016A4                     _strlen:
  1945                           	opt callstack 21
  1946  0016A4  C008  F00A         	movff	strlen@s,strlen@a
  1947  0016A8  C009  F00B         	movff	strlen@s+1,strlen@a+1
  1948  0016AC  EF5A  F00B         	goto	l1421
  1949  0016B0                     l1419:
  1950  0016B0  4A08               	infsnz	strlen@s^0,f,c
  1951  0016B2  2A09               	incf	(strlen@s+1)^0,f,c
  1952  0016B4                     l1421:
  1953  0016B4  C008  FFD9         	movff	strlen@s,fsr2l
  1954  0016B8  C009  FFDA         	movff	strlen@s+1,fsr2h
  1955  0016BC  50DF               	movf	indf2,w,c
  1956  0016BE  A4D8               	btfss	status,2,c
  1957  0016C0  EF64  F00B         	goto	u731
  1958  0016C4  EF66  F00B         	goto	u730
  1959  0016C8                     u731:
  1960  0016C8  EF58  F00B         	goto	l1419
  1961  0016CC                     u730:
  1962  0016CC  500A               	movf	strlen@a^0,w,c
  1963  0016CE  5C08               	subwf	strlen@s^0,w,c
  1964  0016D0  6E08               	movwf	?_strlen^0,c
  1965  0016D2  500B               	movf	(strlen@a+1)^0,w,c
  1966  0016D4  5809               	subwfb	(strlen@s+1)^0,w,c
  1967  0016D6  6E09               	movwf	(?_strlen+1)^0,c
  1968  0016D8  0012               	return		;funcret
  1969  0016DA                     __end_of_strlen:
  1970                           	opt callstack 0
  1971                           
  1972 ;; *************** function _fputs *****************
  1973 ;; Defined at:
  1974 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;  s               2   22[COMRAM] PTR const unsigned char 
  1977 ;;		 -> dbuf(32), 
  1978 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
  1979 ;;		 -> NULL(0), 
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;  i               2   27[COMRAM] int 
  1982 ;;  c               1   26[COMRAM] unsigned char 
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  2   22[COMRAM] int 
  1985 ;; Registers used:
  1986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1992 ;;      Params:         4       0       0       0       0       0       0       0       0
  1993 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1994 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1995 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1996 ;;Total ram usage:        7 bytes
  1997 ;; Hardware stack levels used:    1
  1998 ;; Hardware stack levels required when called:    9
  1999 ;; This function calls:
  2000 ;;		_fputc
  2001 ;; This function is called by:
  2002 ;;		_pad
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           	psect	text7
  2007  0015DE                     __ptext7:
  2008                           	opt callstack 0
  2009  0015DE                     _fputs:
  2010                           	opt callstack 16
  2011  0015DE  0E00               	movlw	0
  2012  0015E0  6E1D               	movwf	(fputs@i+1)^0,c
  2013  0015E2  0E00               	movlw	0
  2014  0015E4  6E1C               	movwf	fputs@i^0,c
  2015  0015E6  EF00  F00B         	goto	l1415
  2016  0015EA                     l1411:
  2017  0015EA  C01B  F00E         	movff	fputs@c,fputc@c
  2018  0015EE  6A0F               	clrf	(fputc@c+1)^0,c
  2019  0015F0  C019  F010         	movff	fputs@fp,fputc@fp
  2020  0015F4  C01A  F011         	movff	fputs@fp+1,fputc@fp+1
  2021  0015F8  ECAA  F009         	call	_fputc	;wreg free
  2022  0015FC  4A1C               	infsnz	fputs@i^0,f,c
  2023  0015FE  2A1D               	incf	(fputs@i+1)^0,f,c
  2024  001600                     l1415:
  2025  001600  501C               	movf	fputs@i^0,w,c
  2026  001602  2417               	addwf	fputs@s^0,w,c
  2027  001604  6ED9               	movwf	fsr2l,c
  2028  001606  501D               	movf	(fputs@i+1)^0,w,c
  2029  001608  2018               	addwfc	(fputs@s+1)^0,w,c
  2030  00160A  6EDA               	movwf	fsr2h,c
  2031  00160C  50DF               	movf	indf2,w,c
  2032  00160E  6E1B               	movwf	fputs@c^0,c
  2033  001610  501B               	movf	fputs@c^0,w,c
  2034  001612  A4D8               	btfss	status,2,c
  2035  001614  EF0E  F00B         	goto	u721
  2036  001618  EF10  F00B         	goto	u720
  2037  00161C                     u721:
  2038  00161C  EFF5  F00A         	goto	l1411
  2039  001620                     u720:
  2040  001620  0012               	return		;funcret
  2041  001622                     __end_of_fputs:
  2042                           	opt callstack 0
  2043                           
  2044 ;; *************** function _fputc *****************
  2045 ;; Defined at:
  2046 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;  c               2   13[COMRAM] int 
  2049 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  2050 ;;		 -> NULL(0), 
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;		None
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  2   13[COMRAM] int 
  2055 ;; Registers used:
  2056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2062 ;;      Params:         4       0       0       0       0       0       0       0       0
  2063 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2064 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2065 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2066 ;;Total ram usage:        9 bytes
  2067 ;; Hardware stack levels used:    1
  2068 ;; Hardware stack levels required when called:    8
  2069 ;; This function calls:
  2070 ;;		_putch
  2071 ;; This function is called by:
  2072 ;;		_pad
  2073 ;;		_vfpfcnvrt
  2074 ;;		_fputs
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           	psect	text8
  2079  001354                     __ptext8:
  2080                           	opt callstack 0
  2081  001354                     _fputc:
  2082                           	opt callstack 19
  2083  001354  5010               	movf	fputc@fp^0,w,c
  2084  001356  1011               	iorwf	(fputc@fp+1)^0,w,c
  2085  001358  B4D8               	btfsc	status,2,c
  2086  00135A  EFB1  F009         	goto	u681
  2087  00135E  EFB3  F009         	goto	u680
  2088  001362                     u681:
  2089  001362  EFBC  F009         	goto	l1399
  2090  001366                     u680:
  2091  001366  5010               	movf	fputc@fp^0,w,c
  2092  001368  1011               	iorwf	(fputc@fp+1)^0,w,c
  2093  00136A  A4D8               	btfss	status,2,c
  2094  00136C  EFBA  F009         	goto	u691
  2095  001370  EFBC  F009         	goto	u690
  2096  001374                     u691:
  2097  001374  EFC1  F009         	goto	l1401
  2098  001378                     u690:
  2099  001378                     l1399:
  2100  001378  500E               	movf	fputc@c^0,w,c
  2101  00137A  ECDB  F00B         	call	_putch
  2102  00137E  EFF4  F009         	goto	l884
  2103  001382                     l1401:
  2104  001382  EE20 F004          	lfsr	2,4
  2105  001386  5010               	movf	fputc@fp^0,w,c
  2106  001388  26D9               	addwf	fsr2l,f,c
  2107  00138A  5011               	movf	(fputc@fp+1)^0,w,c
  2108  00138C  22DA               	addwfc	fsr2h,f,c
  2109  00138E  50DE               	movf	postinc2,w,c
  2110  001390  10DE               	iorwf	postinc2,w,c
  2111  001392  B4D8               	btfsc	status,2,c
  2112  001394  EFCE  F009         	goto	u701
  2113  001398  EFD0  F009         	goto	u700
  2114  00139C                     u701:
  2115  00139C  EFEB  F009         	goto	l1405
  2116  0013A0                     u700:
  2117  0013A0  EE20 F004          	lfsr	2,4
  2118  0013A4  5010               	movf	fputc@fp^0,w,c
  2119  0013A6  26D9               	addwf	fsr2l,f,c
  2120  0013A8  5011               	movf	(fputc@fp+1)^0,w,c
  2121  0013AA  22DA               	addwfc	fsr2h,f,c
  2122  0013AC  EE10 F002          	lfsr	1,2
  2123  0013B0  5010               	movf	fputc@fp^0,w,c
  2124  0013B2  26E1               	addwf	fsr1l,f,c
  2125  0013B4  5011               	movf	(fputc@fp+1)^0,w,c
  2126  0013B6  22E2               	addwfc	fsr1h,f,c
  2127  0013B8  50DE               	movf	postinc2,w,c
  2128  0013BA  5CE6               	subwf	postinc1,w,c
  2129  0013BC  50E6               	movf	postinc1,w,c
  2130  0013BE  0A80               	xorlw	128
  2131  0013C0  6E16               	movwf	(??_fputc+4)^0,c
  2132  0013C2  50DE               	movf	postinc2,w,c
  2133  0013C4  0A80               	xorlw	128
  2134  0013C6  5816               	subwfb	(??_fputc+4)^0,w,c
  2135  0013C8  B0D8               	btfsc	status,0,c
  2136  0013CA  EFE9  F009         	goto	u711
  2137  0013CE  EFEB  F009         	goto	u710
  2138  0013D2                     u711:
  2139  0013D2  EFF4  F009         	goto	l884
  2140  0013D6                     u710:
  2141  0013D6                     l1405:
  2142  0013D6  EE20 F002          	lfsr	2,2
  2143  0013DA  5010               	movf	fputc@fp^0,w,c
  2144  0013DC  26D9               	addwf	fsr2l,f,c
  2145  0013DE  5011               	movf	(fputc@fp+1)^0,w,c
  2146  0013E0  22DA               	addwfc	fsr2h,f,c
  2147  0013E2  2ADE               	incf	postinc2,f,c
  2148  0013E4  0E00               	movlw	0
  2149  0013E6  22DD               	addwfc	postdec2,f,c
  2150  0013E8                     l884:
  2151  0013E8  0012               	return		;funcret
  2152  0013EA                     __end_of_fputc:
  2153                           	opt callstack 0
  2154                           
  2155 ;; *************** function _putch *****************
  2156 ;; Defined at:
  2157 ;;		line 86 in file "main.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  data            1    wreg     unsigned char 
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;  data            1   12[COMRAM] unsigned char 
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  1    wreg      void 
  2164 ;; Registers used:
  2165 ;;		wreg, status,2, status,0, cstack
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2171 ;;      Params:         0       0       0       0       0       0       0       0       0
  2172 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2173 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2174 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2175 ;;Total ram usage:        1 bytes
  2176 ;; Hardware stack levels used:    1
  2177 ;; Hardware stack levels required when called:    7
  2178 ;; This function calls:
  2179 ;;		_escreve_lcd
  2180 ;; This function is called by:
  2181 ;;		_fputc
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           	psect	text9
  2186  0017B6                     __ptext9:
  2187                           	opt callstack 0
  2188  0017B6                     _putch:
  2189                           	opt callstack 19
  2190                           
  2191                           ;incstack = 0
  2192                           ;putch@data stored from wreg
  2193  0017B6  6E0D               	movwf	putch@data^0,c
  2194  0017B8                     
  2195                           ;main.c: 87:     escreve_lcd(data);
  2196  0017B8  500D               	movf	putch@data^0,w,c
  2197  0017BA  ECD4  F00B         	call	_escreve_lcd
  2198  0017BE  0012               	return		;funcret
  2199  0017C0                     __end_of_putch:
  2200                           	opt callstack 0
  2201                           
  2202 ;; *************** function _escreve_lcd *****************
  2203 ;; Defined at:
  2204 ;;		line 42 in file "lcd.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;  c               1    wreg     unsigned char 
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;  c               1   11[COMRAM] unsigned char 
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  1    wreg      void 
  2211 ;; Registers used:
  2212 ;;		wreg, status,2, status,0, cstack
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2218 ;;      Params:         0       0       0       0       0       0       0       0       0
  2219 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2220 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2221 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2222 ;;Total ram usage:        1 bytes
  2223 ;; Hardware stack levels used:    1
  2224 ;; Hardware stack levels required when called:    6
  2225 ;; This function calls:
  2226 ;;		_envia_byte_lcd
  2227 ;; This function is called by:
  2228 ;;		_putch
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           	psect	text10
  2233  0017A8                     __ptext10:
  2234                           	opt callstack 0
  2235  0017A8                     _escreve_lcd:
  2236                           	opt callstack 19
  2237                           
  2238                           ;incstack = 0
  2239                           ;escreve_lcd@c stored from wreg
  2240  0017A8  6E0C               	movwf	escreve_lcd@c^0,c
  2241  0017AA  C00C  F00A         	movff	escreve_lcd@c,envia_byte_lcd@dado
  2242  0017AE  0E01               	movlw	1
  2243  0017B0  EC96  F00B         	call	_envia_byte_lcd
  2244  0017B4  0012               	return		;funcret
  2245  0017B6                     __end_of_escreve_lcd:
  2246                           	opt callstack 0
  2247                           
  2248 ;; *************** function _abs *****************
  2249 ;; Defined at:
  2250 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;  a               2   25[COMRAM] int 
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;		None
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  2   25[COMRAM] int 
  2257 ;; Registers used:
  2258 ;;		wreg, status,2, status,0
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2264 ;;      Params:         2       0       0       0       0       0       0       0       0
  2265 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2266 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2267 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2268 ;;Total ram usage:        4 bytes
  2269 ;; Hardware stack levels used:    1
  2270 ;; Hardware stack levels required when called:    4
  2271 ;; This function calls:
  2272 ;;		Nothing
  2273 ;; This function is called by:
  2274 ;;		_dtoa
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           	psect	text11
  2279  001664                     __ptext11:
  2280                           	opt callstack 0
  2281  001664                     _abs:
  2282                           	opt callstack 22
  2283  001664  BE1B               	btfsc	(abs@a+1)^0,7,c
  2284  001666  EF3F  F00B         	goto	u780
  2285  00166A  501B               	movf	(abs@a+1)^0,w,c
  2286  00166C  E106               	bnz	u781
  2287  00166E  041A               	decf	abs@a^0,w,c
  2288  001670  B0D8               	btfsc	status,0,c
  2289  001672  EF3D  F00B         	goto	u781
  2290  001676  EF3F  F00B         	goto	u780
  2291  00167A                     u781:
  2292  00167A  EF4D  F00B         	goto	l869
  2293  00167E                     u780:
  2294  00167E  C01A  F01C         	movff	abs@a,??_abs
  2295  001682  C01B  F01D         	movff	abs@a+1,??_abs+1
  2296  001686  1E1C               	comf	??_abs^0,f,c
  2297  001688  1E1D               	comf	(??_abs+1)^0,f,c
  2298  00168A  4A1C               	infsnz	??_abs^0,f,c
  2299  00168C  2A1D               	incf	(??_abs+1)^0,f,c
  2300  00168E  C01C  F01A         	movff	??_abs,?_abs
  2301  001692  C01D  F01B         	movff	??_abs+1,?_abs+1
  2302  001696  EF51  F00B         	goto	l872
  2303  00169A                     l869:
  2304  00169A  C01A  F01A         	movff	abs@a,?_abs
  2305  00169E  C01B  F01B         	movff	abs@a+1,?_abs+1
  2306  0016A2                     l872:
  2307  0016A2  0012               	return		;funcret
  2308  0016A4                     __end_of_abs:
  2309                           	opt callstack 0
  2310                           
  2311 ;; *************** function ___aomod *****************
  2312 ;; Defined at:
  2313 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;  dividend        8    7[COMRAM] long long 
  2316 ;;  divisor         8   15[COMRAM] long long 
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;  sign            1   24[COMRAM] unsigned char 
  2319 ;;  counter         1   23[COMRAM] unsigned char 
  2320 ;; Return value:  Size  Location     Type
  2321 ;;                  8    7[COMRAM] long long 
  2322 ;; Registers used:
  2323 ;;		wreg, status,2, status,0
  2324 ;; Tracked objects:
  2325 ;;		On entry : 0/0
  2326 ;;		On exit  : 0/0
  2327 ;;		Unchanged: 0/0
  2328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2329 ;;      Params:        16       0       0       0       0       0       0       0       0
  2330 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2331 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2332 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2333 ;;Total ram usage:       18 bytes
  2334 ;; Hardware stack levels used:    1
  2335 ;; Hardware stack levels required when called:    4
  2336 ;; This function calls:
  2337 ;;		Nothing
  2338 ;; This function is called by:
  2339 ;;		_dtoa
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           	psect	text12
  2344  001034                     __ptext12:
  2345                           	opt callstack 0
  2346  001034                     ___aomod:
  2347                           	opt callstack 22
  2348  001034  0E00               	movlw	0
  2349  001036  6E19               	movwf	___aomod@sign^0,c
  2350  001038  BE0F               	btfsc	(___aomod@dividend+7)^0,7,c
  2351  00103A  EF23  F008         	goto	u860
  2352  00103E  EF21  F008         	goto	u861
  2353  001042                     u861:
  2354  001042  EF35  F008         	goto	l1505
  2355  001046                     u860:
  2356  001046  1E0F               	comf	(___aomod@dividend+7)^0,f,c
  2357  001048  1E0E               	comf	(___aomod@dividend+6)^0,f,c
  2358  00104A  1E0D               	comf	(___aomod@dividend+5)^0,f,c
  2359  00104C  1E0C               	comf	(___aomod@dividend+4)^0,f,c
  2360  00104E  1E0B               	comf	(___aomod@dividend+3)^0,f,c
  2361  001050  1E0A               	comf	(___aomod@dividend+2)^0,f,c
  2362  001052  1E09               	comf	(___aomod@dividend+1)^0,f,c
  2363  001054  6C08               	negf	___aomod@dividend^0,c
  2364  001056  0E00               	movlw	0
  2365  001058  2209               	addwfc	(___aomod@dividend+1)^0,f,c
  2366  00105A  220A               	addwfc	(___aomod@dividend+2)^0,f,c
  2367  00105C  220B               	addwfc	(___aomod@dividend+3)^0,f,c
  2368  00105E  220C               	addwfc	(___aomod@dividend+4)^0,f,c
  2369  001060  220D               	addwfc	(___aomod@dividend+5)^0,f,c
  2370  001062  220E               	addwfc	(___aomod@dividend+6)^0,f,c
  2371  001064  220F               	addwfc	(___aomod@dividend+7)^0,f,c
  2372  001066  0E01               	movlw	1
  2373  001068  6E19               	movwf	___aomod@sign^0,c
  2374  00106A                     l1505:
  2375  00106A  BE17               	btfsc	(___aomod@divisor+7)^0,7,c
  2376  00106C  EF3C  F008         	goto	u870
  2377  001070  EF3A  F008         	goto	u871
  2378  001074                     u871:
  2379  001074  EF4C  F008         	goto	l1509
  2380  001078                     u870:
  2381  001078  1E17               	comf	(___aomod@divisor+7)^0,f,c
  2382  00107A  1E16               	comf	(___aomod@divisor+6)^0,f,c
  2383  00107C  1E15               	comf	(___aomod@divisor+5)^0,f,c
  2384  00107E  1E14               	comf	(___aomod@divisor+4)^0,f,c
  2385  001080  1E13               	comf	(___aomod@divisor+3)^0,f,c
  2386  001082  1E12               	comf	(___aomod@divisor+2)^0,f,c
  2387  001084  1E11               	comf	(___aomod@divisor+1)^0,f,c
  2388  001086  6C10               	negf	___aomod@divisor^0,c
  2389  001088  0E00               	movlw	0
  2390  00108A  2211               	addwfc	(___aomod@divisor+1)^0,f,c
  2391  00108C  2212               	addwfc	(___aomod@divisor+2)^0,f,c
  2392  00108E  2213               	addwfc	(___aomod@divisor+3)^0,f,c
  2393  001090  2214               	addwfc	(___aomod@divisor+4)^0,f,c
  2394  001092  2215               	addwfc	(___aomod@divisor+5)^0,f,c
  2395  001094  2216               	addwfc	(___aomod@divisor+6)^0,f,c
  2396  001096  2217               	addwfc	(___aomod@divisor+7)^0,f,c
  2397  001098                     l1509:
  2398  001098  5010               	movf	___aomod@divisor^0,w,c
  2399  00109A  1011               	iorwf	(___aomod@divisor+1)^0,w,c
  2400  00109C  1012               	iorwf	(___aomod@divisor+2)^0,w,c
  2401  00109E  1013               	iorwf	(___aomod@divisor+3)^0,w,c
  2402  0010A0  1014               	iorwf	(___aomod@divisor+4)^0,w,c
  2403  0010A2  1015               	iorwf	(___aomod@divisor+5)^0,w,c
  2404  0010A4  1016               	iorwf	(___aomod@divisor+6)^0,w,c
  2405  0010A6  1017               	iorwf	(___aomod@divisor+7)^0,w,c
  2406  0010A8  B4D8               	btfsc	status,2,c
  2407  0010AA  EF59  F008         	goto	u881
  2408  0010AE  EF5B  F008         	goto	u880
  2409  0010B2                     u881:
  2410  0010B2  EFA3  F008         	goto	l1525
  2411  0010B6                     u880:
  2412  0010B6  0E01               	movlw	1
  2413  0010B8  6E18               	movwf	___aomod@counter^0,c
  2414  0010BA  EF69  F008         	goto	l1515
  2415  0010BE                     l1513:
  2416  0010BE  90D8               	bcf	status,0,c
  2417  0010C0  3610               	rlcf	___aomod@divisor^0,f,c
  2418  0010C2  3611               	rlcf	(___aomod@divisor+1)^0,f,c
  2419  0010C4  3612               	rlcf	(___aomod@divisor+2)^0,f,c
  2420  0010C6  3613               	rlcf	(___aomod@divisor+3)^0,f,c
  2421  0010C8  3614               	rlcf	(___aomod@divisor+4)^0,f,c
  2422  0010CA  3615               	rlcf	(___aomod@divisor+5)^0,f,c
  2423  0010CC  3616               	rlcf	(___aomod@divisor+6)^0,f,c
  2424  0010CE  3617               	rlcf	(___aomod@divisor+7)^0,f,c
  2425  0010D0  2A18               	incf	___aomod@counter^0,f,c
  2426  0010D2                     l1515:
  2427  0010D2  AE17               	btfss	(___aomod@divisor+7)^0,7,c
  2428  0010D4  EF6E  F008         	goto	u891
  2429  0010D8  EF70  F008         	goto	u890
  2430  0010DC                     u891:
  2431  0010DC  EF5F  F008         	goto	l1513
  2432  0010E0                     u890:
  2433  0010E0                     l1517:
  2434  0010E0  5010               	movf	___aomod@divisor^0,w,c
  2435  0010E2  5C08               	subwf	___aomod@dividend^0,w,c
  2436  0010E4  5011               	movf	(___aomod@divisor+1)^0,w,c
  2437  0010E6  5809               	subwfb	(___aomod@dividend+1)^0,w,c
  2438  0010E8  5012               	movf	(___aomod@divisor+2)^0,w,c
  2439  0010EA  580A               	subwfb	(___aomod@dividend+2)^0,w,c
  2440  0010EC  5013               	movf	(___aomod@divisor+3)^0,w,c
  2441  0010EE  580B               	subwfb	(___aomod@dividend+3)^0,w,c
  2442  0010F0  5014               	movf	(___aomod@divisor+4)^0,w,c
  2443  0010F2  580C               	subwfb	(___aomod@dividend+4)^0,w,c
  2444  0010F4  5015               	movf	(___aomod@divisor+5)^0,w,c
  2445  0010F6  580D               	subwfb	(___aomod@dividend+5)^0,w,c
  2446  0010F8  5016               	movf	(___aomod@divisor+6)^0,w,c
  2447  0010FA  580E               	subwfb	(___aomod@dividend+6)^0,w,c
  2448  0010FC  5017               	movf	(___aomod@divisor+7)^0,w,c
  2449  0010FE  580F               	subwfb	(___aomod@dividend+7)^0,w,c
  2450  001100  A0D8               	btfss	status,0,c
  2451  001102  EF85  F008         	goto	u901
  2452  001106  EF87  F008         	goto	u900
  2453  00110A                     u901:
  2454  00110A  EF97  F008         	goto	l1521
  2455  00110E                     u900:
  2456  00110E  5010               	movf	___aomod@divisor^0,w,c
  2457  001110  5E08               	subwf	___aomod@dividend^0,f,c
  2458  001112  5011               	movf	(___aomod@divisor+1)^0,w,c
  2459  001114  5A09               	subwfb	(___aomod@dividend+1)^0,f,c
  2460  001116  5012               	movf	(___aomod@divisor+2)^0,w,c
  2461  001118  5A0A               	subwfb	(___aomod@dividend+2)^0,f,c
  2462  00111A  5013               	movf	(___aomod@divisor+3)^0,w,c
  2463  00111C  5A0B               	subwfb	(___aomod@dividend+3)^0,f,c
  2464  00111E  5014               	movf	(___aomod@divisor+4)^0,w,c
  2465  001120  5A0C               	subwfb	(___aomod@dividend+4)^0,f,c
  2466  001122  5015               	movf	(___aomod@divisor+5)^0,w,c
  2467  001124  5A0D               	subwfb	(___aomod@dividend+5)^0,f,c
  2468  001126  5016               	movf	(___aomod@divisor+6)^0,w,c
  2469  001128  5A0E               	subwfb	(___aomod@dividend+6)^0,f,c
  2470  00112A  5017               	movf	(___aomod@divisor+7)^0,w,c
  2471  00112C  5A0F               	subwfb	(___aomod@dividend+7)^0,f,c
  2472  00112E                     l1521:
  2473  00112E  90D8               	bcf	status,0,c
  2474  001130  3217               	rrcf	(___aomod@divisor+7)^0,f,c
  2475  001132  3216               	rrcf	(___aomod@divisor+6)^0,f,c
  2476  001134  3215               	rrcf	(___aomod@divisor+5)^0,f,c
  2477  001136  3214               	rrcf	(___aomod@divisor+4)^0,f,c
  2478  001138  3213               	rrcf	(___aomod@divisor+3)^0,f,c
  2479  00113A  3212               	rrcf	(___aomod@divisor+2)^0,f,c
  2480  00113C  3211               	rrcf	(___aomod@divisor+1)^0,f,c
  2481  00113E  3210               	rrcf	___aomod@divisor^0,f,c
  2482  001140  2E18               	decfsz	___aomod@counter^0,f,c
  2483  001142  EF70  F008         	goto	l1517
  2484  001146                     l1525:
  2485  001146  5019               	movf	___aomod@sign^0,w,c
  2486  001148  B4D8               	btfsc	status,2,c
  2487  00114A  EFA9  F008         	goto	u911
  2488  00114E  EFAB  F008         	goto	u910
  2489  001152                     u911:
  2490  001152  EFBB  F008         	goto	l1529
  2491  001156                     u910:
  2492  001156  1E0F               	comf	(___aomod@dividend+7)^0,f,c
  2493  001158  1E0E               	comf	(___aomod@dividend+6)^0,f,c
  2494  00115A  1E0D               	comf	(___aomod@dividend+5)^0,f,c
  2495  00115C  1E0C               	comf	(___aomod@dividend+4)^0,f,c
  2496  00115E  1E0B               	comf	(___aomod@dividend+3)^0,f,c
  2497  001160  1E0A               	comf	(___aomod@dividend+2)^0,f,c
  2498  001162  1E09               	comf	(___aomod@dividend+1)^0,f,c
  2499  001164  6C08               	negf	___aomod@dividend^0,c
  2500  001166  0E00               	movlw	0
  2501  001168  2209               	addwfc	(___aomod@dividend+1)^0,f,c
  2502  00116A  220A               	addwfc	(___aomod@dividend+2)^0,f,c
  2503  00116C  220B               	addwfc	(___aomod@dividend+3)^0,f,c
  2504  00116E  220C               	addwfc	(___aomod@dividend+4)^0,f,c
  2505  001170  220D               	addwfc	(___aomod@dividend+5)^0,f,c
  2506  001172  220E               	addwfc	(___aomod@dividend+6)^0,f,c
  2507  001174  220F               	addwfc	(___aomod@dividend+7)^0,f,c
  2508  001176                     l1529:
  2509  001176  C008  F008         	movff	___aomod@dividend,?___aomod
  2510  00117A  C009  F009         	movff	___aomod@dividend+1,?___aomod+1
  2511  00117E  C00A  F00A         	movff	___aomod@dividend+2,?___aomod+2
  2512  001182  C00B  F00B         	movff	___aomod@dividend+3,?___aomod+3
  2513  001186  C00C  F00C         	movff	___aomod@dividend+4,?___aomod+4
  2514  00118A  C00D  F00D         	movff	___aomod@dividend+5,?___aomod+5
  2515  00118E  C00E  F00E         	movff	___aomod@dividend+6,?___aomod+6
  2516  001192  C00F  F00F         	movff	___aomod@dividend+7,?___aomod+7
  2517  001196  0012               	return		;funcret
  2518  001198                     __end_of___aomod:
  2519                           	opt callstack 0
  2520                           
  2521 ;; *************** function ___aodiv *****************
  2522 ;; Defined at:
  2523 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;  dividend        8    7[COMRAM] long long 
  2526 ;;  divisor         8   15[COMRAM] long long 
  2527 ;; Auto vars:     Size  Location     Type
  2528 ;;  quotient        8   25[COMRAM] long long 
  2529 ;;  sign            1   24[COMRAM] unsigned char 
  2530 ;;  counter         1   23[COMRAM] unsigned char 
  2531 ;; Return value:  Size  Location     Type
  2532 ;;                  8    7[COMRAM] long long 
  2533 ;; Registers used:
  2534 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2540 ;;      Params:        16       0       0       0       0       0       0       0       0
  2541 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2542 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2543 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2544 ;;Total ram usage:       26 bytes
  2545 ;; Hardware stack levels used:    1
  2546 ;; Hardware stack levels required when called:    4
  2547 ;; This function calls:
  2548 ;;		Nothing
  2549 ;; This function is called by:
  2550 ;;		_dtoa
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           	psect	text13
  2555  000EAC                     __ptext13:
  2556                           	opt callstack 0
  2557  000EAC                     ___aodiv:
  2558                           	opt callstack 22
  2559  000EAC  0E00               	movlw	0
  2560  000EAE  6E19               	movwf	___aodiv@sign^0,c
  2561  000EB0  BE17               	btfsc	(___aodiv@divisor+7)^0,7,c
  2562  000EB2  EF5F  F007         	goto	u790
  2563  000EB6  EF5D  F007         	goto	u791
  2564  000EBA                     u791:
  2565  000EBA  EF71  F007         	goto	l1461
  2566  000EBE                     u790:
  2567  000EBE  1E17               	comf	(___aodiv@divisor+7)^0,f,c
  2568  000EC0  1E16               	comf	(___aodiv@divisor+6)^0,f,c
  2569  000EC2  1E15               	comf	(___aodiv@divisor+5)^0,f,c
  2570  000EC4  1E14               	comf	(___aodiv@divisor+4)^0,f,c
  2571  000EC6  1E13               	comf	(___aodiv@divisor+3)^0,f,c
  2572  000EC8  1E12               	comf	(___aodiv@divisor+2)^0,f,c
  2573  000ECA  1E11               	comf	(___aodiv@divisor+1)^0,f,c
  2574  000ECC  6C10               	negf	___aodiv@divisor^0,c
  2575  000ECE  0E00               	movlw	0
  2576  000ED0  2211               	addwfc	(___aodiv@divisor+1)^0,f,c
  2577  000ED2  2212               	addwfc	(___aodiv@divisor+2)^0,f,c
  2578  000ED4  2213               	addwfc	(___aodiv@divisor+3)^0,f,c
  2579  000ED6  2214               	addwfc	(___aodiv@divisor+4)^0,f,c
  2580  000ED8  2215               	addwfc	(___aodiv@divisor+5)^0,f,c
  2581  000EDA  2216               	addwfc	(___aodiv@divisor+6)^0,f,c
  2582  000EDC  2217               	addwfc	(___aodiv@divisor+7)^0,f,c
  2583  000EDE  0E01               	movlw	1
  2584  000EE0  6E19               	movwf	___aodiv@sign^0,c
  2585  000EE2                     l1461:
  2586  000EE2  BE0F               	btfsc	(___aodiv@dividend+7)^0,7,c
  2587  000EE4  EF78  F007         	goto	u800
  2588  000EE8  EF76  F007         	goto	u801
  2589  000EEC                     u801:
  2590  000EEC  EF8A  F007         	goto	l1467
  2591  000EF0                     u800:
  2592  000EF0  1E0F               	comf	(___aodiv@dividend+7)^0,f,c
  2593  000EF2  1E0E               	comf	(___aodiv@dividend+6)^0,f,c
  2594  000EF4  1E0D               	comf	(___aodiv@dividend+5)^0,f,c
  2595  000EF6  1E0C               	comf	(___aodiv@dividend+4)^0,f,c
  2596  000EF8  1E0B               	comf	(___aodiv@dividend+3)^0,f,c
  2597  000EFA  1E0A               	comf	(___aodiv@dividend+2)^0,f,c
  2598  000EFC  1E09               	comf	(___aodiv@dividend+1)^0,f,c
  2599  000EFE  6C08               	negf	___aodiv@dividend^0,c
  2600  000F00  0E00               	movlw	0
  2601  000F02  2209               	addwfc	(___aodiv@dividend+1)^0,f,c
  2602  000F04  220A               	addwfc	(___aodiv@dividend+2)^0,f,c
  2603  000F06  220B               	addwfc	(___aodiv@dividend+3)^0,f,c
  2604  000F08  220C               	addwfc	(___aodiv@dividend+4)^0,f,c
  2605  000F0A  220D               	addwfc	(___aodiv@dividend+5)^0,f,c
  2606  000F0C  220E               	addwfc	(___aodiv@dividend+6)^0,f,c
  2607  000F0E  220F               	addwfc	(___aodiv@dividend+7)^0,f,c
  2608  000F10  0E01               	movlw	1
  2609  000F12  1A19               	xorwf	___aodiv@sign^0,f,c
  2610  000F14                     l1467:
  2611  000F14  EE20  F01A         	lfsr	2,___aodiv@quotient
  2612  000F18  0E07               	movlw	7
  2613  000F1A                     u811:
  2614  000F1A  6ADE               	clrf	postinc2,c
  2615  000F1C  06E8               	decf	wreg,f,c
  2616  000F1E  E2FD               	bc	u811
  2617  000F20  5010               	movf	___aodiv@divisor^0,w,c
  2618  000F22  1011               	iorwf	(___aodiv@divisor+1)^0,w,c
  2619  000F24  1012               	iorwf	(___aodiv@divisor+2)^0,w,c
  2620  000F26  1013               	iorwf	(___aodiv@divisor+3)^0,w,c
  2621  000F28  1014               	iorwf	(___aodiv@divisor+4)^0,w,c
  2622  000F2A  1015               	iorwf	(___aodiv@divisor+5)^0,w,c
  2623  000F2C  1016               	iorwf	(___aodiv@divisor+6)^0,w,c
  2624  000F2E  1017               	iorwf	(___aodiv@divisor+7)^0,w,c
  2625  000F30  B4D8               	btfsc	status,2,c
  2626  000F32  EF9D  F007         	goto	u821
  2627  000F36  EF9F  F007         	goto	u820
  2628  000F3A                     u821:
  2629  000F3A  EFF1  F007         	goto	l1489
  2630  000F3E                     u820:
  2631  000F3E  0E01               	movlw	1
  2632  000F40  6E18               	movwf	___aodiv@counter^0,c
  2633  000F42  EFAD  F007         	goto	l1475
  2634  000F46                     l1473:
  2635  000F46  90D8               	bcf	status,0,c
  2636  000F48  3610               	rlcf	___aodiv@divisor^0,f,c
  2637  000F4A  3611               	rlcf	(___aodiv@divisor+1)^0,f,c
  2638  000F4C  3612               	rlcf	(___aodiv@divisor+2)^0,f,c
  2639  000F4E  3613               	rlcf	(___aodiv@divisor+3)^0,f,c
  2640  000F50  3614               	rlcf	(___aodiv@divisor+4)^0,f,c
  2641  000F52  3615               	rlcf	(___aodiv@divisor+5)^0,f,c
  2642  000F54  3616               	rlcf	(___aodiv@divisor+6)^0,f,c
  2643  000F56  3617               	rlcf	(___aodiv@divisor+7)^0,f,c
  2644  000F58  2A18               	incf	___aodiv@counter^0,f,c
  2645  000F5A                     l1475:
  2646  000F5A  AE17               	btfss	(___aodiv@divisor+7)^0,7,c
  2647  000F5C  EFB2  F007         	goto	u831
  2648  000F60  EFB4  F007         	goto	u830
  2649  000F64                     u831:
  2650  000F64  EFA3  F007         	goto	l1473
  2651  000F68                     u830:
  2652  000F68                     l1477:
  2653  000F68  90D8               	bcf	status,0,c
  2654  000F6A  361A               	rlcf	___aodiv@quotient^0,f,c
  2655  000F6C  361B               	rlcf	(___aodiv@quotient+1)^0,f,c
  2656  000F6E  361C               	rlcf	(___aodiv@quotient+2)^0,f,c
  2657  000F70  361D               	rlcf	(___aodiv@quotient+3)^0,f,c
  2658  000F72  361E               	rlcf	(___aodiv@quotient+4)^0,f,c
  2659  000F74  361F               	rlcf	(___aodiv@quotient+5)^0,f,c
  2660  000F76  3620               	rlcf	(___aodiv@quotient+6)^0,f,c
  2661  000F78  3621               	rlcf	(___aodiv@quotient+7)^0,f,c
  2662  000F7A  5010               	movf	___aodiv@divisor^0,w,c
  2663  000F7C  5C08               	subwf	___aodiv@dividend^0,w,c
  2664  000F7E  5011               	movf	(___aodiv@divisor+1)^0,w,c
  2665  000F80  5809               	subwfb	(___aodiv@dividend+1)^0,w,c
  2666  000F82  5012               	movf	(___aodiv@divisor+2)^0,w,c
  2667  000F84  580A               	subwfb	(___aodiv@dividend+2)^0,w,c
  2668  000F86  5013               	movf	(___aodiv@divisor+3)^0,w,c
  2669  000F88  580B               	subwfb	(___aodiv@dividend+3)^0,w,c
  2670  000F8A  5014               	movf	(___aodiv@divisor+4)^0,w,c
  2671  000F8C  580C               	subwfb	(___aodiv@dividend+4)^0,w,c
  2672  000F8E  5015               	movf	(___aodiv@divisor+5)^0,w,c
  2673  000F90  580D               	subwfb	(___aodiv@dividend+5)^0,w,c
  2674  000F92  5016               	movf	(___aodiv@divisor+6)^0,w,c
  2675  000F94  580E               	subwfb	(___aodiv@dividend+6)^0,w,c
  2676  000F96  5017               	movf	(___aodiv@divisor+7)^0,w,c
  2677  000F98  580F               	subwfb	(___aodiv@dividend+7)^0,w,c
  2678  000F9A  A0D8               	btfss	status,0,c
  2679  000F9C  EFD2  F007         	goto	u841
  2680  000FA0  EFD4  F007         	goto	u840
  2681  000FA4                     u841:
  2682  000FA4  EFE5  F007         	goto	l1485
  2683  000FA8                     u840:
  2684  000FA8  5010               	movf	___aodiv@divisor^0,w,c
  2685  000FAA  5E08               	subwf	___aodiv@dividend^0,f,c
  2686  000FAC  5011               	movf	(___aodiv@divisor+1)^0,w,c
  2687  000FAE  5A09               	subwfb	(___aodiv@dividend+1)^0,f,c
  2688  000FB0  5012               	movf	(___aodiv@divisor+2)^0,w,c
  2689  000FB2  5A0A               	subwfb	(___aodiv@dividend+2)^0,f,c
  2690  000FB4  5013               	movf	(___aodiv@divisor+3)^0,w,c
  2691  000FB6  5A0B               	subwfb	(___aodiv@dividend+3)^0,f,c
  2692  000FB8  5014               	movf	(___aodiv@divisor+4)^0,w,c
  2693  000FBA  5A0C               	subwfb	(___aodiv@dividend+4)^0,f,c
  2694  000FBC  5015               	movf	(___aodiv@divisor+5)^0,w,c
  2695  000FBE  5A0D               	subwfb	(___aodiv@dividend+5)^0,f,c
  2696  000FC0  5016               	movf	(___aodiv@divisor+6)^0,w,c
  2697  000FC2  5A0E               	subwfb	(___aodiv@dividend+6)^0,f,c
  2698  000FC4  5017               	movf	(___aodiv@divisor+7)^0,w,c
  2699  000FC6  5A0F               	subwfb	(___aodiv@dividend+7)^0,f,c
  2700  000FC8  801A               	bsf	___aodiv@quotient^0,0,c
  2701  000FCA                     l1485:
  2702  000FCA  90D8               	bcf	status,0,c
  2703  000FCC  3217               	rrcf	(___aodiv@divisor+7)^0,f,c
  2704  000FCE  3216               	rrcf	(___aodiv@divisor+6)^0,f,c
  2705  000FD0  3215               	rrcf	(___aodiv@divisor+5)^0,f,c
  2706  000FD2  3214               	rrcf	(___aodiv@divisor+4)^0,f,c
  2707  000FD4  3213               	rrcf	(___aodiv@divisor+3)^0,f,c
  2708  000FD6  3212               	rrcf	(___aodiv@divisor+2)^0,f,c
  2709  000FD8  3211               	rrcf	(___aodiv@divisor+1)^0,f,c
  2710  000FDA  3210               	rrcf	___aodiv@divisor^0,f,c
  2711  000FDC  2E18               	decfsz	___aodiv@counter^0,f,c
  2712  000FDE  EFB4  F007         	goto	l1477
  2713  000FE2                     l1489:
  2714  000FE2  5019               	movf	___aodiv@sign^0,w,c
  2715  000FE4  B4D8               	btfsc	status,2,c
  2716  000FE6  EFF7  F007         	goto	u851
  2717  000FEA  EFF9  F007         	goto	u850
  2718  000FEE                     u851:
  2719  000FEE  EF09  F008         	goto	l1493
  2720  000FF2                     u850:
  2721  000FF2  1E21               	comf	(___aodiv@quotient+7)^0,f,c
  2722  000FF4  1E20               	comf	(___aodiv@quotient+6)^0,f,c
  2723  000FF6  1E1F               	comf	(___aodiv@quotient+5)^0,f,c
  2724  000FF8  1E1E               	comf	(___aodiv@quotient+4)^0,f,c
  2725  000FFA  1E1D               	comf	(___aodiv@quotient+3)^0,f,c
  2726  000FFC  1E1C               	comf	(___aodiv@quotient+2)^0,f,c
  2727  000FFE  1E1B               	comf	(___aodiv@quotient+1)^0,f,c
  2728  001000  6C1A               	negf	___aodiv@quotient^0,c
  2729  001002  0E00               	movlw	0
  2730  001004  221B               	addwfc	(___aodiv@quotient+1)^0,f,c
  2731  001006  221C               	addwfc	(___aodiv@quotient+2)^0,f,c
  2732  001008  221D               	addwfc	(___aodiv@quotient+3)^0,f,c
  2733  00100A  221E               	addwfc	(___aodiv@quotient+4)^0,f,c
  2734  00100C  221F               	addwfc	(___aodiv@quotient+5)^0,f,c
  2735  00100E  2220               	addwfc	(___aodiv@quotient+6)^0,f,c
  2736  001010  2221               	addwfc	(___aodiv@quotient+7)^0,f,c
  2737  001012                     l1493:
  2738  001012  C01A  F008         	movff	___aodiv@quotient,?___aodiv
  2739  001016  C01B  F009         	movff	___aodiv@quotient+1,?___aodiv+1
  2740  00101A  C01C  F00A         	movff	___aodiv@quotient+2,?___aodiv+2
  2741  00101E  C01D  F00B         	movff	___aodiv@quotient+3,?___aodiv+3
  2742  001022  C01E  F00C         	movff	___aodiv@quotient+4,?___aodiv+4
  2743  001026  C01F  F00D         	movff	___aodiv@quotient+5,?___aodiv+5
  2744  00102A  C020  F00E         	movff	___aodiv@quotient+6,?___aodiv+6
  2745  00102E  C021  F00F         	movff	___aodiv@quotient+7,?___aodiv+7
  2746  001032  0012               	return		;funcret
  2747  001034                     __end_of___aodiv:
  2748                           	opt callstack 0
  2749                           
  2750 ;; *************** function _limpa_lcd *****************
  2751 ;; Defined at:
  2752 ;;		line 45 in file "lcd.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;		None
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;		None
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  1    wreg      void 
  2759 ;; Registers used:
  2760 ;;		wreg, status,2, status,0, cstack
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2766 ;;      Params:         0       0       0       0       0       0       0       0       0
  2767 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2768 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2769 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2770 ;;Total ram usage:        1 bytes
  2771 ;; Hardware stack levels used:    1
  2772 ;; Hardware stack levels required when called:    6
  2773 ;; This function calls:
  2774 ;;		_envia_byte_lcd
  2775 ;; This function is called by:
  2776 ;;		_main
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780                           	psect	text14
  2781  001774                     __ptext14:
  2782                           	opt callstack 0
  2783  001774                     _limpa_lcd:
  2784                           	opt callstack 24
  2785  001774                     
  2786                           ;lcd.c: 46:   envia_byte_lcd(0,0x01);
  2787  001774  0E01               	movlw	1
  2788  001776  6E0A               	movwf	envia_byte_lcd@dado^0,c
  2789  001778  0E00               	movlw	0
  2790  00177A  EC96  F00B         	call	_envia_byte_lcd
  2791  00177E                     
  2792                           ;lcd.c: 47:   _delay((unsigned long)((2)*(4000000/4000.0)));
  2793  00177E  0E03               	movlw	3
  2794  001780  6E0C               	movwf	??_limpa_lcd^0,c
  2795  001782  0E98               	movlw	152
  2796  001784                     u1497:
  2797  001784  2EE8               	decfsz	wreg,f,c
  2798  001786  D7FE               	bra	u1497
  2799  001788  2E0C               	decfsz	??_limpa_lcd^0,f,c
  2800  00178A  D7FC               	bra	u1497
  2801  00178C  0012               	return		;funcret
  2802  00178E                     __end_of_limpa_lcd:
  2803                           	opt callstack 0
  2804                           
  2805 ;; *************** function _inicializa_lcd *****************
  2806 ;; Defined at:
  2807 ;;		line 52 in file "lcd.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;		None
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;		None
  2812 ;; Return value:  Size  Location     Type
  2813 ;;                  1    wreg      void 
  2814 ;; Registers used:
  2815 ;;		wreg, status,2, status,0, cstack
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2821 ;;      Params:         0       0       0       0       0       0       0       0       0
  2822 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2823 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2824 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2825 ;;Total ram usage:        1 bytes
  2826 ;; Hardware stack levels used:    1
  2827 ;; Hardware stack levels required when called:    6
  2828 ;; This function calls:
  2829 ;;		_envia_byte_lcd
  2830 ;;		_envia_nibble_lcd
  2831 ;; This function is called by:
  2832 ;;		_main
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836                           	psect	text15
  2837  0014FA                     __ptext15:
  2838                           	opt callstack 0
  2839  0014FA                     _inicializa_lcd:
  2840                           	opt callstack 24
  2841  0014FA                     
  2842                           ;lcd.c: 53:  PORTDbits.RD1 = 0;
  2843  0014FA  9283               	bcf	131,1,c	;volatile
  2844                           
  2845                           ;lcd.c: 54:  PORTDbits.RD4 = 0;
  2846  0014FC  9883               	bcf	131,4,c	;volatile
  2847                           
  2848                           ;lcd.c: 55:  PORTDbits.RD5 = 0;
  2849  0014FE  9A83               	bcf	131,5,c	;volatile
  2850                           
  2851                           ;lcd.c: 56:  PORTDbits.RD6 = 0;
  2852  001500  9C83               	bcf	131,6,c	;volatile
  2853                           
  2854                           ;lcd.c: 57:  PORTDbits.RD7 = 0;
  2855  001502  9E83               	bcf	131,7,c	;volatile
  2856  001504                     
  2857                           ;lcd.c: 59:  _delay((unsigned long)((50)*(4000000/4000.0)));
  2858  001504  0E41               	movlw	65
  2859  001506  6E0C               	movwf	??_inicializa_lcd^0,c
  2860  001508  0EEE               	movlw	238
  2861  00150A                     u1507:
  2862  00150A  2EE8               	decfsz	wreg,f,c
  2863  00150C  D7FE               	bra	u1507
  2864  00150E  2E0C               	decfsz	??_inicializa_lcd^0,f,c
  2865  001510  D7FC               	bra	u1507
  2866  001512  D000               	nop2	
  2867  001514                     
  2868                           ;lcd.c: 60:  envia_nibble_lcd(0x03);
  2869  001514  0E03               	movlw	3
  2870  001516  ECF5  F009         	call	_envia_nibble_lcd
  2871  00151A                     
  2872                           ;lcd.c: 61:  _delay((unsigned long)((4)*(4000000/4000.0)));
  2873  00151A  0E06               	movlw	6
  2874  00151C  6E0C               	movwf	??_inicializa_lcd^0,c
  2875  00151E  0E30               	movlw	48
  2876  001520                     u1517:
  2877  001520  2EE8               	decfsz	wreg,f,c
  2878  001522  D7FE               	bra	u1517
  2879  001524  2E0C               	decfsz	??_inicializa_lcd^0,f,c
  2880  001526  D7FC               	bra	u1517
  2881  001528  D000               	nop2	
  2882                           
  2883                           ;lcd.c: 62:  envia_nibble_lcd(0x03);
  2884  00152A  0E03               	movlw	3
  2885  00152C  ECF5  F009         	call	_envia_nibble_lcd
  2886  001530                     
  2887                           ;lcd.c: 63:  _delay((unsigned long)((100)*(4000000/4000000.0)));
  2888  001530  0E21               	movlw	33
  2889  001532                     u1527:
  2890  001532  2EE8               	decfsz	wreg,f,c
  2891  001534  D7FE               	bra	u1527
  2892  001536  F000               	nop	
  2893  001538                     
  2894                           ;lcd.c: 64:  envia_nibble_lcd(0x03);
  2895  001538  0E03               	movlw	3
  2896  00153A  ECF5  F009         	call	_envia_nibble_lcd
  2897  00153E                     
  2898                           ;lcd.c: 66:  envia_nibble_lcd(0x02);
  2899  00153E  0E02               	movlw	2
  2900  001540  ECF5  F009         	call	_envia_nibble_lcd
  2901  001544                     
  2902                           ;lcd.c: 68:  envia_byte_lcd(0,0x01);
  2903  001544  0E01               	movlw	1
  2904  001546  6E0A               	movwf	envia_byte_lcd@dado^0,c
  2905  001548  0E00               	movlw	0
  2906  00154A  EC96  F00B         	call	_envia_byte_lcd
  2907                           
  2908                           ;lcd.c: 69:  _delay((unsigned long)((2)*(4000000/4000.0)));
  2909  00154E  0E03               	movlw	3
  2910  001550  6E0C               	movwf	??_inicializa_lcd^0,c
  2911  001552  0E98               	movlw	152
  2912  001554                     u1537:
  2913  001554  2EE8               	decfsz	wreg,f,c
  2914  001556  D7FE               	bra	u1537
  2915  001558  2E0C               	decfsz	??_inicializa_lcd^0,f,c
  2916  00155A  D7FC               	bra	u1537
  2917  00155C                     
  2918                           ;lcd.c: 71:  envia_byte_lcd(0,0x28);
  2919  00155C  0E28               	movlw	40
  2920  00155E  6E0A               	movwf	envia_byte_lcd@dado^0,c
  2921  001560  0E00               	movlw	0
  2922  001562  EC96  F00B         	call	_envia_byte_lcd
  2923  001566                     
  2924                           ;lcd.c: 73:  envia_byte_lcd(0,0x0c);
  2925  001566  0E0C               	movlw	12
  2926  001568  6E0A               	movwf	envia_byte_lcd@dado^0,c
  2927  00156A  0E00               	movlw	0
  2928  00156C  EC96  F00B         	call	_envia_byte_lcd
  2929  001570                     
  2930                           ;lcd.c: 75:  envia_byte_lcd(0,0x06);
  2931  001570  0E06               	movlw	6
  2932  001572  6E0A               	movwf	envia_byte_lcd@dado^0,c
  2933  001574  0E00               	movlw	0
  2934  001576  EC96  F00B         	call	_envia_byte_lcd
  2935  00157A  0012               	return		;funcret
  2936  00157C                     __end_of_inicializa_lcd:
  2937                           	opt callstack 0
  2938                           
  2939 ;; *************** function _caracter_inicio *****************
  2940 ;; Defined at:
  2941 ;;		line 81 in file "lcd.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;  linha           1    wreg     unsigned char 
  2944 ;;  coluna          1   11[COMRAM] unsigned char 
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;  linha           1   12[COMRAM] unsigned char 
  2947 ;;  posicao         1   13[COMRAM] unsigned char 
  2948 ;; Return value:  Size  Location     Type
  2949 ;;                  1    wreg      void 
  2950 ;; Registers used:
  2951 ;;		wreg, status,2, status,0, cstack
  2952 ;; Tracked objects:
  2953 ;;		On entry : 0/0
  2954 ;;		On exit  : 0/0
  2955 ;;		Unchanged: 0/0
  2956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2957 ;;      Params:         1       0       0       0       0       0       0       0       0
  2958 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2959 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2960 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2961 ;;Total ram usage:        3 bytes
  2962 ;; Hardware stack levels used:    1
  2963 ;; Hardware stack levels required when called:    6
  2964 ;; This function calls:
  2965 ;;		_envia_byte_lcd
  2966 ;; This function is called by:
  2967 ;;		_main
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971                           	psect	text16
  2972  001622                     __ptext16:
  2973                           	opt callstack 0
  2974  001622                     _caracter_inicio:
  2975                           	opt callstack 24
  2976                           
  2977                           ;incstack = 0
  2978                           ;caracter_inicio@linha stored from wreg
  2979  001622  6E0D               	movwf	caracter_inicio@linha^0,c
  2980  001624                     
  2981                           ;lcd.c: 82:     char posicao=0;
  2982  001624  0E00               	movlw	0
  2983  001626  6E0E               	movwf	caracter_inicio@posicao^0,c
  2984  001628                     
  2985                           ;lcd.c: 83:     if(linha == 1) {
  2986  001628  040D               	decf	caracter_inicio@linha^0,w,c
  2987  00162A  A4D8               	btfss	status,2,c
  2988  00162C  EF1A  F00B         	goto	u1131
  2989  001630  EF1C  F00B         	goto	u1130
  2990  001634                     u1131:
  2991  001634  EF1E  F00B         	goto	l1695
  2992  001638                     u1130:
  2993  001638                     
  2994                           ;lcd.c: 84:         posicao=0x80;
  2995  001638  0E80               	movlw	128
  2996  00163A  6E0E               	movwf	caracter_inicio@posicao^0,c
  2997  00163C                     l1695:
  2998                           
  2999                           ;lcd.c: 86:     if(linha == 2) {
  3000  00163C  0E02               	movlw	2
  3001  00163E  180D               	xorwf	caracter_inicio@linha^0,w,c
  3002  001640  A4D8               	btfss	status,2,c
  3003  001642  EF25  F00B         	goto	u1141
  3004  001646  EF27  F00B         	goto	u1140
  3005  00164A                     u1141:
  3006  00164A  EF29  F00B         	goto	l1699
  3007  00164E                     u1140:
  3008  00164E                     
  3009                           ;lcd.c: 87:         posicao=0xc0;
  3010  00164E  0EC0               	movlw	192
  3011  001650  6E0E               	movwf	caracter_inicio@posicao^0,c
  3012  001652                     l1699:
  3013                           
  3014                           ;lcd.c: 90:     posicao=posicao+coluna;
  3015  001652  500E               	movf	caracter_inicio@posicao^0,w,c
  3016  001654  240C               	addwf	caracter_inicio@coluna^0,w,c
  3017  001656  6E0E               	movwf	caracter_inicio@posicao^0,c
  3018  001658                     
  3019                           ;lcd.c: 92:     envia_byte_lcd(0,posicao);
  3020  001658  C00E  F00A         	movff	caracter_inicio@posicao,envia_byte_lcd@dado
  3021  00165C  0E00               	movlw	0
  3022  00165E  EC96  F00B         	call	_envia_byte_lcd
  3023  001662  0012               	return		;funcret
  3024  001664                     __end_of_caracter_inicio:
  3025                           	opt callstack 0
  3026                           
  3027 ;; *************** function _envia_byte_lcd *****************
  3028 ;; Defined at:
  3029 ;;		line 33 in file "lcd.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;  endereco        1    wreg     unsigned char 
  3032 ;;  dado            1    9[COMRAM] unsigned char 
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;  endereco        1   10[COMRAM] unsigned char 
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  1    wreg      void 
  3037 ;; Registers used:
  3038 ;;		wreg, status,2, status,0, cstack
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3044 ;;      Params:         1       0       0       0       0       0       0       0       0
  3045 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3046 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3047 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3048 ;;Total ram usage:        2 bytes
  3049 ;; Hardware stack levels used:    1
  3050 ;; Hardware stack levels required when called:    5
  3051 ;; This function calls:
  3052 ;;		_envia_nibble_lcd
  3053 ;; This function is called by:
  3054 ;;		_escreve_lcd
  3055 ;;		_limpa_lcd
  3056 ;;		_inicializa_lcd
  3057 ;;		_caracter_inicio
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           	psect	text17
  3062  00172C                     __ptext17:
  3063                           	opt callstack 0
  3064  00172C                     _envia_byte_lcd:
  3065                           	opt callstack 19
  3066                           
  3067                           ;incstack = 0
  3068                           ;envia_byte_lcd@endereco stored from wreg
  3069  00172C  6E0B               	movwf	envia_byte_lcd@endereco^0,c
  3070  00172E                     
  3071                           ;lcd.c: 34:  PORTDbits.RD0 = endereco;
  3072  00172E  B00B               	btfsc	envia_byte_lcd@endereco^0,0,c
  3073  001730  D002               	bra	u675
  3074  001732  9083               	bcf	131,0,c	;volatile
  3075  001734  D001               	bra	u676
  3076  001736                     u675:
  3077  001736  8083               	bsf	131,0,c	;volatile
  3078  001738                     u676:
  3079  001738                     
  3080                           ;lcd.c: 35:  _delay((unsigned long)((5)*(4000000/4000000.0)));
  3081  001738  D000               	nop2		;2 cycle nop
  3082  00173A  D000               	nop2		;2 cycle nop
  3083  00173C  F000               	nop	
  3084  00173E                     
  3085                           ;lcd.c: 36:  envia_nibble_lcd(dado>>4);
  3086  00173E  380A               	swapf	envia_byte_lcd@dado^0,w,c
  3087  001740  0B0F               	andlw	15
  3088  001742  ECF5  F009         	call	_envia_nibble_lcd
  3089  001746                     
  3090                           ;lcd.c: 37:  envia_nibble_lcd(dado & 0x0f);
  3091  001746  500A               	movf	envia_byte_lcd@dado^0,w,c
  3092  001748  0B0F               	andlw	15
  3093  00174A  ECF5  F009         	call	_envia_nibble_lcd
  3094  00174E  0012               	return		;funcret
  3095  001750                     __end_of_envia_byte_lcd:
  3096                           	opt callstack 0
  3097                           
  3098 ;; *************** function _envia_nibble_lcd *****************
  3099 ;; Defined at:
  3100 ;;		line 13 in file "lcd.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;  dado            1    wreg     unsigned char 
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;  dado            1    8[COMRAM] unsigned char 
  3105 ;; Return value:  Size  Location     Type
  3106 ;;                  1    wreg      void 
  3107 ;; Registers used:
  3108 ;;		wreg, status,2, status,0
  3109 ;; Tracked objects:
  3110 ;;		On entry : 0/0
  3111 ;;		On exit  : 0/0
  3112 ;;		Unchanged: 0/0
  3113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3114 ;;      Params:         0       0       0       0       0       0       0       0       0
  3115 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3116 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3117 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3118 ;;Total ram usage:        2 bytes
  3119 ;; Hardware stack levels used:    1
  3120 ;; Hardware stack levels required when called:    4
  3121 ;; This function calls:
  3122 ;;		Nothing
  3123 ;; This function is called by:
  3124 ;;		_envia_byte_lcd
  3125 ;;		_inicializa_lcd
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           	psect	text18
  3130  0013EA                     __ptext18:
  3131                           	opt callstack 0
  3132  0013EA                     _envia_nibble_lcd:
  3133                           	opt callstack 19
  3134                           
  3135                           ;incstack = 0
  3136                           ;envia_nibble_lcd@dado stored from wreg
  3137  0013EA  6E09               	movwf	envia_nibble_lcd@dado^0,c
  3138  0013EC                     
  3139                           ;lcd.c: 14:   PORTDbits.RD1 = 1;
  3140  0013EC  8283               	bsf	131,1,c	;volatile
  3141  0013EE                     
  3142                           ;lcd.c: 15:   PORTDbits.RD4 = dado & 0x01;
  3143  0013EE  C009  F008         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  3144  0013F2  0E01               	movlw	1
  3145  0013F4  1608               	andwf	??_envia_nibble_lcd^0,f,c
  3146  0013F6  3A08               	swapf	??_envia_nibble_lcd^0,f,c
  3147  0013F8  5083               	movf	131,w,c	;volatile
  3148  0013FA  1808               	xorwf	??_envia_nibble_lcd^0,w,c
  3149  0013FC  0BEF               	andlw	-17
  3150  0013FE  1808               	xorwf	??_envia_nibble_lcd^0,w,c
  3151  001400  6E83               	movwf	131,c	;volatile
  3152                           
  3153                           ;lcd.c: 16:   PORTDbits.RD5 = (dado >> 1) & 0x01;
  3154  001402  C009  F008         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  3155  001406  90D8               	bcf	status,0,c
  3156  001408  3208               	rrcf	??_envia_nibble_lcd^0,f,c
  3157  00140A  0E01               	movlw	1
  3158  00140C  1608               	andwf	??_envia_nibble_lcd^0,f,c
  3159  00140E  3A08               	swapf	??_envia_nibble_lcd^0,f,c
  3160  001410  4608               	rlncf	??_envia_nibble_lcd^0,f,c
  3161  001412  5083               	movf	131,w,c	;volatile
  3162  001414  1808               	xorwf	??_envia_nibble_lcd^0,w,c
  3163  001416  0BDF               	andlw	-33
  3164  001418  1808               	xorwf	??_envia_nibble_lcd^0,w,c
  3165  00141A  6E83               	movwf	131,c	;volatile
  3166                           
  3167                           ;lcd.c: 17:   PORTDbits.RD6 = (dado >> 2) & 0x01;
  3168  00141C  C009  F008         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  3169  001420  90D8               	bcf	status,0,c
  3170  001422  3208               	rrcf	??_envia_nibble_lcd^0,f,c
  3171  001424  90D8               	bcf	status,0,c
  3172  001426  3208               	rrcf	??_envia_nibble_lcd^0,f,c
  3173  001428  0E01               	movlw	1
  3174  00142A  1608               	andwf	??_envia_nibble_lcd^0,f,c
  3175  00142C  3A08               	swapf	??_envia_nibble_lcd^0,f,c
  3176  00142E  4608               	rlncf	??_envia_nibble_lcd^0,f,c
  3177  001430  4608               	rlncf	??_envia_nibble_lcd^0,f,c
  3178  001432  5083               	movf	131,w,c	;volatile
  3179  001434  1808               	xorwf	??_envia_nibble_lcd^0,w,c
  3180  001436  0BBF               	andlw	-65
  3181  001438  1808               	xorwf	??_envia_nibble_lcd^0,w,c
  3182  00143A  6E83               	movwf	131,c	;volatile
  3183                           
  3184                           ;lcd.c: 18:   PORTDbits.RD7 = (dado >> 3) & 0x01;
  3185  00143C  C009  F008         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  3186  001440  90D8               	bcf	status,0,c
  3187  001442  3208               	rrcf	??_envia_nibble_lcd^0,f,c
  3188  001444  90D8               	bcf	status,0,c
  3189  001446  3208               	rrcf	??_envia_nibble_lcd^0,f,c
  3190  001448  90D8               	bcf	status,0,c
  3191  00144A  3208               	rrcf	??_envia_nibble_lcd^0,f,c
  3192  00144C  0E01               	movlw	1
  3193  00144E  1608               	andwf	??_envia_nibble_lcd^0,f,c
  3194  001450  3208               	rrcf	??_envia_nibble_lcd^0,f,c
  3195  001452  3208               	rrcf	??_envia_nibble_lcd^0,f,c
  3196  001454  5083               	movf	131,w,c	;volatile
  3197  001456  1808               	xorwf	??_envia_nibble_lcd^0,w,c
  3198  001458  0B7F               	andlw	-129
  3199  00145A  1808               	xorwf	??_envia_nibble_lcd^0,w,c
  3200  00145C  6E83               	movwf	131,c	;volatile
  3201  00145E                     
  3202                           ;lcd.c: 21:   _delay((unsigned long)((50)*(4000000/4000000.0)));
  3203  00145E  0E10               	movlw	16
  3204  001460                     u1547:
  3205  001460  2EE8               	decfsz	wreg,f,c
  3206  001462  D7FE               	bra	u1547
  3207  001464  D000               	nop2	
  3208  001466                     
  3209                           ;lcd.c: 22:   PORTDbits.RD1 = 0;
  3210  001466  9283               	bcf	131,1,c	;volatile
  3211  001468                     
  3212                           ;lcd.c: 23:   _delay((unsigned long)((50)*(4000000/4000000.0)));
  3213  001468  0E10               	movlw	16
  3214  00146A                     u1557:
  3215  00146A  2EE8               	decfsz	wreg,f,c
  3216  00146C  D7FE               	bra	u1557
  3217  00146E  D000               	nop2	
  3218  001470  0012               	return		;funcret
  3219  001472                     __end_of_envia_nibble_lcd:
  3220                           	opt callstack 0
  3221                           
  3222 ;; *************** function _isr *****************
  3223 ;; Defined at:
  3224 ;;		line 92 in file "main.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;		None
  3227 ;; Auto vars:     Size  Location     Type
  3228 ;;		None
  3229 ;; Return value:  Size  Location     Type
  3230 ;;                  1    wreg      void 
  3231 ;; Registers used:
  3232 ;;		wreg, status,2, status,0, cstack
  3233 ;; Tracked objects:
  3234 ;;		On entry : 0/0
  3235 ;;		On exit  : 0/0
  3236 ;;		Unchanged: 0/0
  3237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3238 ;;      Params:         0       0       0       0       0       0       0       0       0
  3239 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3240 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3241 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3242 ;;Total ram usage:        2 bytes
  3243 ;; Hardware stack levels used:    1
  3244 ;; Hardware stack levels required when called:    3
  3245 ;; This function calls:
  3246 ;;		i2_limpa_lcd
  3247 ;; This function is called by:
  3248 ;;		Interrupt level 2
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           
  3252                           	psect	intcode
  3253  000008                     __pintcode:
  3254                           	opt callstack 0
  3255  000008                     _isr:
  3256                           	opt callstack 16
  3257                           
  3258                           ;incstack = 0
  3259  000008  8258               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3260  00000A  EDCC  F008         	call	int_func,f	;refresh shadow registers
  3261                           
  3262                           	psect	intcode_body
  3263  001198                     __pintcode_body:
  3264                           	opt callstack 16
  3265  001198                     int_func:
  3266                           	opt callstack 16
  3267  001198  0006               	pop		; remove dummy address from shadow register refresh
  3268  00119A                     
  3269                           ;main.c: 93:     if (INT0IF) {
  3270  00119A  A2F2               	btfss	4082,1,c	;volatile
  3271  00119C  EFD2  F008         	goto	i2u115_41
  3272  0011A0  EFD4  F008         	goto	i2u115_40
  3273  0011A4                     i2u115_41:
  3274  0011A4  EF2D  F009         	goto	i2l66
  3275  0011A8                     i2u115_40:
  3276  0011A8                     
  3277                           ;main.c: 94:         if((botao_azul==0)&&(botao_vermelho==0)) {
  3278  0011A8  5056               	movf	_botao_azul^0,w,c
  3279  0011AA  1057               	iorwf	(_botao_azul+1)^0,w,c
  3280  0011AC  A4D8               	btfss	status,2,c
  3281  0011AE  EFDB  F008         	goto	i2u116_41
  3282  0011B2  EFDD  F008         	goto	i2u116_40
  3283  0011B6                     i2u116_41:
  3284  0011B6  EF06  F009         	goto	i2l1735
  3285  0011BA                     i2u116_40:
  3286  0011BA  5054               	movf	_botao_vermelho^0,w,c
  3287  0011BC  1055               	iorwf	(_botao_vermelho+1)^0,w,c
  3288  0011BE  A4D8               	btfss	status,2,c
  3289  0011C0  EFE4  F008         	goto	i2u117_41
  3290  0011C4  EFE6  F008         	goto	i2u117_40
  3291  0011C8                     i2u117_41:
  3292  0011C8  EF06  F009         	goto	i2l1735
  3293  0011CC                     i2u117_40:
  3294  0011CC                     
  3295                           ;main.c: 95:             mediador=1;
  3296  0011CC  0E00               	movlw	0
  3297  0011CE  0100               	movlb	0	; () banked
  3298  0011D0  6F6B               	movwf	(_mediador+1)& (0+255),b
  3299  0011D2  0E01               	movlw	1
  3300  0011D4  6F6A               	movwf	_mediador& (0+255),b
  3301  0011D6                     
  3302                           ; BSR set to: 0
  3303                           ;main.c: 96:             PORTAbits.RA0=1;
  3304  0011D6  8080               	bsf	128,0,c	;volatile
  3305  0011D8                     
  3306                           ; BSR set to: 0
  3307                           ;main.c: 97:             INT1IE=1;
  3308  0011D8  86F0               	bsf	4080,3,c	;volatile
  3309  0011DA                     
  3310                           ; BSR set to: 0
  3311                           ;main.c: 98:             INT2IE=1;
  3312  0011DA  88F0               	bsf	4080,4,c	;volatile
  3313                           
  3314                           ;main.c: 99:             tempo_azul = 0;
  3315  0011DC  0E00               	movlw	0
  3316  0011DE  6F69               	movwf	(_tempo_azul+1)& (0+255),b
  3317  0011E0  0E00               	movlw	0
  3318  0011E2  6F68               	movwf	_tempo_azul& (0+255),b
  3319                           
  3320                           ;main.c: 100:             tempo_vermelho = 0;
  3321  0011E4  0E00               	movlw	0
  3322  0011E6  6F67               	movwf	(_tempo_vermelho+1)& (0+255),b
  3323  0011E8  0E00               	movlw	0
  3324  0011EA  6F66               	movwf	_tempo_vermelho& (0+255),b
  3325  0011EC                     
  3326                           ; BSR set to: 0
  3327                           ;main.c: 101:             PORTAbits.RA3=1;
  3328  0011EC  8680               	bsf	128,3,c	;volatile
  3329  0011EE                     
  3330                           ; BSR set to: 0
  3331                           ;main.c: 102:              _delay((unsigned long)((500)*(4000000/4000.0)));
  3332  0011EE  0E03               	movlw	3
  3333  0011F0  6E07               	movwf	(??_isr+1)^0,c
  3334  0011F2  0E8A               	movlw	138
  3335  0011F4  6E06               	movwf	??_isr^0,c
  3336  0011F6  0E56               	movlw	86
  3337  0011F8                     i2u156_47:
  3338  0011F8  2EE8               	decfsz	wreg,f,c
  3339  0011FA  D7FE               	bra	i2u156_47
  3340  0011FC  2E06               	decfsz	??_isr^0,f,c
  3341  0011FE  D7FC               	bra	i2u156_47
  3342  001200  2E07               	decfsz	(??_isr+1)^0,f,c
  3343  001202  D7FA               	bra	i2u156_47
  3344  001204                     
  3345                           ;main.c: 103:              PORTAbits.RA3 = 0;
  3346  001204  9680               	bcf	128,3,c	;volatile
  3347  001206                     
  3348                           ;main.c: 104:              PORTAbits.RA0 = 0;
  3349  001206  9080               	bcf	128,0,c	;volatile
  3350                           
  3351                           ;main.c: 105:         }else if((botao_azul==1)&&(botao_vermelho==1)) {
  3352  001208  EF2A  F009         	goto	i2l1749
  3353  00120C                     i2l1735:
  3354  00120C  0456               	decf	_botao_azul^0,w,c
  3355  00120E  1057               	iorwf	(_botao_azul+1)^0,w,c
  3356  001210  A4D8               	btfss	status,2,c
  3357  001212  EF0D  F009         	goto	i2u118_41
  3358  001216  EF0F  F009         	goto	i2u118_40
  3359  00121A                     i2u118_41:
  3360  00121A  EF2A  F009         	goto	i2l1749
  3361  00121E                     i2u118_40:
  3362  00121E  0454               	decf	_botao_vermelho^0,w,c
  3363  001220  1055               	iorwf	(_botao_vermelho+1)^0,w,c
  3364  001222  A4D8               	btfss	status,2,c
  3365  001224  EF16  F009         	goto	i2u119_41
  3366  001228  EF18  F009         	goto	i2u119_40
  3367  00122C                     i2u119_41:
  3368  00122C  EF2A  F009         	goto	i2l1749
  3369  001230                     i2u119_40:
  3370  001230                     
  3371                           ;main.c: 106:             mediador = 0;
  3372  001230  0E00               	movlw	0
  3373  001232  0100               	movlb	0	; () banked
  3374  001234  6F6B               	movwf	(_mediador+1)& (0+255),b
  3375  001236  0E00               	movlw	0
  3376  001238  6F6A               	movwf	_mediador& (0+255),b
  3377                           
  3378                           ;main.c: 107:             botao_azul = 0;
  3379  00123A  0E00               	movlw	0
  3380  00123C  6E57               	movwf	(_botao_azul+1)^0,c
  3381  00123E  0E00               	movlw	0
  3382  001240  6E56               	movwf	_botao_azul^0,c
  3383                           
  3384                           ;main.c: 108:             botao_vermelho = 0;
  3385  001242  0E00               	movlw	0
  3386  001244  6E55               	movwf	(_botao_vermelho+1)^0,c
  3387  001246  0E00               	movlw	0
  3388  001248  6E54               	movwf	_botao_vermelho^0,c
  3389  00124A                     
  3390                           ; BSR set to: 0
  3391                           ;main.c: 109:             PORTAbits.RA1 = 0;
  3392  00124A  9280               	bcf	128,1,c	;volatile
  3393  00124C                     
  3394                           ; BSR set to: 0
  3395                           ;main.c: 110:             PORTAbits.RA2 = 0;
  3396  00124C  9480               	bcf	128,2,c	;volatile
  3397  00124E                     
  3398                           ; BSR set to: 0
  3399                           ;main.c: 111:             PORTAbits.RA0 = 0;
  3400  00124E  9080               	bcf	128,0,c	;volatile
  3401  001250                     
  3402                           ; BSR set to: 0
  3403                           ;main.c: 112:             limpa_lcd();
  3404  001250  ECC7  F00B         	call	i2_limpa_lcd	;wreg free
  3405  001254                     i2l1749:
  3406                           
  3407                           ;main.c: 114:         INT0IF = 0;
  3408  001254  92F2               	bcf	4082,1,c	;volatile
  3409  001256  EF47  F009         	goto	i2l70
  3410  00125A                     i2l66:
  3411                           
  3412                           ;main.c: 117:     if (INT1IF) {
  3413  00125A  A0F0               	btfss	4080,0,c	;volatile
  3414  00125C  EF32  F009         	goto	i2u120_41
  3415  001260  EF34  F009         	goto	i2u120_40
  3416  001264                     i2u120_41:
  3417  001264  EF3B  F009         	goto	i2l71
  3418  001268                     i2u120_40:
  3419  001268                     
  3420                           ;main.c: 119:         botao_azul = 1;
  3421  001268  0E00               	movlw	0
  3422  00126A  6E57               	movwf	(_botao_azul+1)^0,c
  3423  00126C  0E01               	movlw	1
  3424  00126E  6E56               	movwf	_botao_azul^0,c
  3425  001270                     
  3426                           ;main.c: 120:         INT1IF = 0;
  3427  001270  90F0               	bcf	4080,0,c	;volatile
  3428  001272  EF47  F009         	goto	i2l70
  3429  001276                     i2l71:
  3430                           
  3431                           ;main.c: 123:     if(INT2IF){
  3432  001276  A2F0               	btfss	4080,1,c	;volatile
  3433  001278  EF40  F009         	goto	i2u121_41
  3434  00127C  EF42  F009         	goto	i2u121_40
  3435  001280                     i2u121_41:
  3436  001280  EF47  F009         	goto	i2l70
  3437  001284                     i2u121_40:
  3438  001284                     
  3439                           ;main.c: 124:         botao_vermelho = 1;
  3440  001284  0E00               	movlw	0
  3441  001286  6E55               	movwf	(_botao_vermelho+1)^0,c
  3442  001288  0E01               	movlw	1
  3443  00128A  6E54               	movwf	_botao_vermelho^0,c
  3444  00128C                     
  3445                           ;main.c: 125:         INT2IF = 0;
  3446  00128C  92F0               	bcf	4080,1,c	;volatile
  3447  00128E                     i2l70:
  3448  00128E  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3449  001290  0011               	retfie		f
  3450  001292                     __end_of_isr:
  3451                           	opt callstack 0
  3452                           
  3453 ;; *************** function i2_limpa_lcd *****************
  3454 ;; Defined at:
  3455 ;;		line 45 in file "lcd.c"
  3456 ;; Parameters:    Size  Location     Type
  3457 ;;		None
  3458 ;; Auto vars:     Size  Location     Type
  3459 ;;		None
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  1    wreg      void 
  3462 ;; Registers used:
  3463 ;;		wreg, status,2, status,0, cstack
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3469 ;;      Params:         0       0       0       0       0       0       0       0       0
  3470 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3471 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3472 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3473 ;;Total ram usage:        1 bytes
  3474 ;; Hardware stack levels used:    1
  3475 ;; Hardware stack levels required when called:    2
  3476 ;; This function calls:
  3477 ;;		i2_envia_byte_lcd
  3478 ;; This function is called by:
  3479 ;;		_isr
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           	psect	text20
  3484  00178E                     __ptext20:
  3485                           	opt callstack 0
  3486  00178E                     i2_limpa_lcd:
  3487                           	opt callstack 16
  3488  00178E                     
  3489                           ;lcd.c: 46:   envia_byte_lcd(0,0x01);
  3490  00178E  0E01               	movlw	1
  3491  001790  6E03               	movwf	i2envia_byte_lcd@dado^0,c
  3492  001792  0E00               	movlw	0
  3493  001794  ECA8  F00B         	call	i2_envia_byte_lcd
  3494  001798                     
  3495                           ;lcd.c: 47:   _delay((unsigned long)((2)*(4000000/4000.0)));
  3496  001798  0E03               	movlw	3
  3497  00179A  6E05               	movwf	??i2_limpa_lcd^0,c
  3498  00179C  0E98               	movlw	152
  3499  00179E                     i2u157_47:
  3500  00179E  2EE8               	decfsz	wreg,f,c
  3501  0017A0  D7FE               	bra	i2u157_47
  3502  0017A2  2E05               	decfsz	??i2_limpa_lcd^0,f,c
  3503  0017A4  D7FC               	bra	i2u157_47
  3504  0017A6  0012               	return		;funcret
  3505  0017A8                     __end_ofi2_limpa_lcd:
  3506                           	opt callstack 0
  3507                           
  3508 ;; *************** function i2_envia_byte_lcd *****************
  3509 ;; Defined at:
  3510 ;;		line 33 in file "lcd.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;  endereco        1    wreg     unsigned char 
  3513 ;;  dado            1    2[COMRAM] unsigned char 
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;  endereco        1    3[COMRAM] unsigned char 
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  1    wreg      void 
  3518 ;; Registers used:
  3519 ;;		wreg, status,2, status,0, cstack
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3525 ;;      Params:         1       0       0       0       0       0       0       0       0
  3526 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3527 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3528 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3529 ;;Total ram usage:        2 bytes
  3530 ;; Hardware stack levels used:    1
  3531 ;; Hardware stack levels required when called:    1
  3532 ;; This function calls:
  3533 ;;		i2_envia_nibble_lcd
  3534 ;; This function is called by:
  3535 ;;		i2_limpa_lcd
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539                           	psect	text21
  3540  001750                     __ptext21:
  3541                           	opt callstack 0
  3542  001750                     i2_envia_byte_lcd:
  3543                           	opt callstack 16
  3544                           
  3545                           ;incstack = 0
  3546                           ;i2envia_byte_lcd@endereco stored from wreg
  3547  001750  6E04               	movwf	i2envia_byte_lcd@endereco^0,c
  3548  001752                     
  3549                           ;lcd.c: 34:  PORTDbits.RD0 = endereco;
  3550  001752  B004               	btfsc	i2envia_byte_lcd@endereco^0,0,c
  3551  001754  D002               	bra	i2u112_45
  3552  001756  9083               	bcf	131,0,c	;volatile
  3553  001758  D001               	bra	i2u112_46
  3554  00175A                     i2u112_45:
  3555  00175A  8083               	bsf	131,0,c	;volatile
  3556  00175C                     i2u112_46:
  3557  00175C                     
  3558                           ;lcd.c: 35:  _delay((unsigned long)((5)*(4000000/4000000.0)));
  3559  00175C  D000               	nop2		;2 cycle nop
  3560  00175E  D000               	nop2		;2 cycle nop
  3561  001760  F000               	nop	
  3562  001762                     
  3563                           ;lcd.c: 36:  envia_nibble_lcd(dado>>4);
  3564  001762  3803               	swapf	i2envia_byte_lcd@dado^0,w,c
  3565  001764  0B0F               	andlw	15
  3566  001766  EC39  F00A         	call	i2_envia_nibble_lcd
  3567  00176A                     
  3568                           ;lcd.c: 37:  envia_nibble_lcd(dado & 0x0f);
  3569  00176A  5003               	movf	i2envia_byte_lcd@dado^0,w,c
  3570  00176C  0B0F               	andlw	15
  3571  00176E  EC39  F00A         	call	i2_envia_nibble_lcd
  3572  001772  0012               	return		;funcret
  3573  001774                     __end_ofi2_envia_byte_lcd:
  3574                           	opt callstack 0
  3575                           
  3576 ;; *************** function i2_envia_nibble_lcd *****************
  3577 ;; Defined at:
  3578 ;;		line 13 in file "lcd.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;  dado            1    wreg     unsigned char 
  3581 ;; Auto vars:     Size  Location     Type
  3582 ;;  dado            1    1[COMRAM] unsigned char 
  3583 ;; Return value:  Size  Location     Type
  3584 ;;                  1    wreg      void 
  3585 ;; Registers used:
  3586 ;;		wreg, status,2, status,0
  3587 ;; Tracked objects:
  3588 ;;		On entry : 0/0
  3589 ;;		On exit  : 0/0
  3590 ;;		Unchanged: 0/0
  3591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3592 ;;      Params:         0       0       0       0       0       0       0       0       0
  3593 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3594 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3595 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3596 ;;Total ram usage:        2 bytes
  3597 ;; Hardware stack levels used:    1
  3598 ;; This function calls:
  3599 ;;		Nothing
  3600 ;; This function is called by:
  3601 ;;		i2_envia_byte_lcd
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605                           	psect	text22
  3606  001472                     __ptext22:
  3607                           	opt callstack 0
  3608  001472                     i2_envia_nibble_lcd:
  3609                           	opt callstack 16
  3610                           
  3611                           ;incstack = 0
  3612                           ;i2envia_nibble_lcd@dado stored from wreg
  3613  001472  6E02               	movwf	i2envia_nibble_lcd@dado^0,c
  3614  001474                     
  3615                           ;lcd.c: 14:   PORTDbits.RD1 = 1;
  3616  001474  8283               	bsf	131,1,c	;volatile
  3617  001476                     
  3618                           ;lcd.c: 15:   PORTDbits.RD4 = dado & 0x01;
  3619  001476  C002  F001         	movff	i2envia_nibble_lcd@dado,??i2_envia_nibble_lcd
  3620  00147A  0E01               	movlw	1
  3621  00147C  1601               	andwf	??i2_envia_nibble_lcd^0,f,c
  3622  00147E  3A01               	swapf	??i2_envia_nibble_lcd^0,f,c
  3623  001480  5083               	movf	131,w,c	;volatile
  3624  001482  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  3625  001484  0BEF               	andlw	-17
  3626  001486  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  3627  001488  6E83               	movwf	131,c	;volatile
  3628                           
  3629                           ;lcd.c: 16:   PORTDbits.RD5 = (dado >> 1) & 0x01;
  3630  00148A  C002  F001         	movff	i2envia_nibble_lcd@dado,??i2_envia_nibble_lcd
  3631  00148E  90D8               	bcf	status,0,c
  3632  001490  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  3633  001492  0E01               	movlw	1
  3634  001494  1601               	andwf	??i2_envia_nibble_lcd^0,f,c
  3635  001496  3A01               	swapf	??i2_envia_nibble_lcd^0,f,c
  3636  001498  4601               	rlncf	??i2_envia_nibble_lcd^0,f,c
  3637  00149A  5083               	movf	131,w,c	;volatile
  3638  00149C  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  3639  00149E  0BDF               	andlw	-33
  3640  0014A0  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  3641  0014A2  6E83               	movwf	131,c	;volatile
  3642                           
  3643                           ;lcd.c: 17:   PORTDbits.RD6 = (dado >> 2) & 0x01;
  3644  0014A4  C002  F001         	movff	i2envia_nibble_lcd@dado,??i2_envia_nibble_lcd
  3645  0014A8  90D8               	bcf	status,0,c
  3646  0014AA  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  3647  0014AC  90D8               	bcf	status,0,c
  3648  0014AE  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  3649  0014B0  0E01               	movlw	1
  3650  0014B2  1601               	andwf	??i2_envia_nibble_lcd^0,f,c
  3651  0014B4  3A01               	swapf	??i2_envia_nibble_lcd^0,f,c
  3652  0014B6  4601               	rlncf	??i2_envia_nibble_lcd^0,f,c
  3653  0014B8  4601               	rlncf	??i2_envia_nibble_lcd^0,f,c
  3654  0014BA  5083               	movf	131,w,c	;volatile
  3655  0014BC  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  3656  0014BE  0BBF               	andlw	-65
  3657  0014C0  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  3658  0014C2  6E83               	movwf	131,c	;volatile
  3659                           
  3660                           ;lcd.c: 18:   PORTDbits.RD7 = (dado >> 3) & 0x01;
  3661  0014C4  C002  F001         	movff	i2envia_nibble_lcd@dado,??i2_envia_nibble_lcd
  3662  0014C8  90D8               	bcf	status,0,c
  3663  0014CA  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  3664  0014CC  90D8               	bcf	status,0,c
  3665  0014CE  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  3666  0014D0  90D8               	bcf	status,0,c
  3667  0014D2  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  3668  0014D4  0E01               	movlw	1
  3669  0014D6  1601               	andwf	??i2_envia_nibble_lcd^0,f,c
  3670  0014D8  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  3671  0014DA  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  3672  0014DC  5083               	movf	131,w,c	;volatile
  3673  0014DE  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  3674  0014E0  0B7F               	andlw	-129
  3675  0014E2  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  3676  0014E4  6E83               	movwf	131,c	;volatile
  3677  0014E6                     
  3678                           ;lcd.c: 21:   _delay((unsigned long)((50)*(4000000/4000000.0)));
  3679  0014E6  0E10               	movlw	16
  3680  0014E8                     i2u158_47:
  3681  0014E8  2EE8               	decfsz	wreg,f,c
  3682  0014EA  D7FE               	bra	i2u158_47
  3683  0014EC  D000               	nop2	
  3684  0014EE                     
  3685                           ;lcd.c: 22:   PORTDbits.RD1 = 0;
  3686  0014EE  9283               	bcf	131,1,c	;volatile
  3687  0014F0                     
  3688                           ;lcd.c: 23:   _delay((unsigned long)((50)*(4000000/4000000.0)));
  3689  0014F0  0E10               	movlw	16
  3690  0014F2                     i2u159_47:
  3691  0014F2  2EE8               	decfsz	wreg,f,c
  3692  0014F4  D7FE               	bra	i2u159_47
  3693  0014F6  D000               	nop2	
  3694  0014F8  0012               	return		;funcret
  3695  0014FA                     __end_ofi2_envia_nibble_lcd:
  3696                           	opt callstack 0
  3697                           
  3698                           	psect	rparam
  3699  0000                     
  3700                           	psect	temp
  3701  000058                     btemp:
  3702                           	opt callstack 0
  3703  000058                     	ds	1
  3704  0000                     int$flags	set	btemp
  3705  0000                     wtemp8	set	btemp+1
  3706  0000                     ttemp5	set	btemp+1
  3707  0000                     ttemp6	set	btemp+4
  3708  0000                     ttemp7	set	btemp+8
  3709                           tosu	equ	0xFFF
  3710                           tosh	equ	0xFFE
  3711                           tosl	equ	0xFFD
  3712                           stkptr	equ	0xFFC
  3713                           pclatu	equ	0xFFB
  3714                           pclath	equ	0xFFA
  3715                           pcl	equ	0xFF9
  3716                           tblptru	equ	0xFF8
  3717                           tblptrh	equ	0xFF7
  3718                           tblptrl	equ	0xFF6
  3719                           tablat	equ	0xFF5
  3720                           prodh	equ	0xFF4
  3721                           prodl	equ	0xFF3
  3722                           indf0	equ	0xFEF
  3723                           postinc0	equ	0xFEE
  3724                           postdec0	equ	0xFED
  3725                           preinc0	equ	0xFEC
  3726                           plusw0	equ	0xFEB
  3727                           fsr0h	equ	0xFEA
  3728                           fsr0l	equ	0xFE9
  3729                           wreg	equ	0xFE8
  3730                           indf1	equ	0xFE7
  3731                           postinc1	equ	0xFE6
  3732                           postdec1	equ	0xFE5
  3733                           preinc1	equ	0xFE4
  3734                           plusw1	equ	0xFE3
  3735                           fsr1h	equ	0xFE2
  3736                           fsr1l	equ	0xFE1
  3737                           bsr	equ	0xFE0
  3738                           indf2	equ	0xFDF
  3739                           postinc2	equ	0xFDE
  3740                           postdec2	equ	0xFDD
  3741                           preinc2	equ	0xFDC
  3742                           plusw2	equ	0xFDB
  3743                           fsr2h	equ	0xFDA
  3744                           fsr2l	equ	0xFD9
  3745                           status	equ	0xFD8


Data Sizes:
    Strings     41
    Constant    0
    Data        0
    BSS         50
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      87
    BANK0           160     32      76
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[15]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S882_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_escreve_lcd
    _escreve_lcd->_envia_byte_lcd
    _abs->___aomod
    _limpa_lcd->_envia_byte_lcd
    _inicializa_lcd->_envia_byte_lcd
    _caracter_inicio->_envia_byte_lcd
    _envia_byte_lcd->_envia_nibble_lcd

Critical Paths under _isr in COMRAM

    _isr->i2_limpa_lcd
    i2_limpa_lcd->i2_envia_byte_lcd
    i2_envia_byte_lcd->i2_envia_nibble_lcd

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   11314
                                             80 COMRAM     1     1      0
                                             28 BANK0      4     4      0
                    _caracter_inicio
                     _inicializa_lcd
                          _limpa_lcd
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    8746
                                             20 BANK0      8     4      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    8395
                                             78 COMRAM     2     2      0
                                             14 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    7922
                                             76 COMRAM     2     2      0
                                              0 BANK0     14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5686
                                             40 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4037
                                             29 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              7 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1899
                                             22 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1498
                                             13 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0     730
                                             12 COMRAM     1     1      0
                        _escreve_lcd
 ---------------------------------------------------------------------------------
 (6) _escreve_lcd                                          1     1      0     708
                                             11 COMRAM     1     1      0
                     _envia_byte_lcd
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             25 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              7 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              7 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _limpa_lcd                                            1     1      0     686
                                             11 COMRAM     1     1      0
                     _envia_byte_lcd
 ---------------------------------------------------------------------------------
 (1) _inicializa_lcd                                       1     1      0     774
                                             11 COMRAM     1     1      0
                     _envia_byte_lcd
                   _envia_nibble_lcd
 ---------------------------------------------------------------------------------
 (1) _caracter_inicio                                      3     2      1    1028
                                             11 COMRAM     3     2      1
                     _envia_byte_lcd
 ---------------------------------------------------------------------------------
 (7) _envia_byte_lcd                                       2     1      1     686
                                              9 COMRAM     2     1      1
                   _envia_nibble_lcd
 ---------------------------------------------------------------------------------
 (8) _envia_nibble_lcd                                     2     2      0      88
                                              7 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _isr                                                 2     2      0     180
                                              5 COMRAM     2     2      0
                        i2_limpa_lcd
 ---------------------------------------------------------------------------------
 (13) i2_limpa_lcd                                         1     1      0     180
                                              4 COMRAM     1     1      0
                   i2_envia_byte_lcd
 ---------------------------------------------------------------------------------
 (14) i2_envia_byte_lcd                                    2     1      1     180
                                              2 COMRAM     2     1      1
                 i2_envia_nibble_lcd
 ---------------------------------------------------------------------------------
 (15) i2_envia_nibble_lcd                                  2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _caracter_inicio
     _envia_byte_lcd
       _envia_nibble_lcd
   _inicializa_lcd
     _envia_byte_lcd
       _envia_nibble_lcd
     _envia_nibble_lcd
   _limpa_lcd
     _envia_byte_lcd
       _envia_nibble_lcd
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _escreve_lcd
                   _envia_byte_lcd
                     _envia_nibble_lcd
             _fputs
               _fputc
                 _putch
                   _escreve_lcd
                     _envia_byte_lcd
                       _envia_nibble_lcd
             _strlen
         _fputc
           _putch
             _escreve_lcd
               _envia_byte_lcd
                 _envia_nibble_lcd

 _isr (ROOT)
   i2_limpa_lcd
     i2_envia_byte_lcd
       i2_envia_nibble_lcd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     20      4C       5       47.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      57       1       92.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A3      20        0.0%
DATA                 0      0      A3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Dec 10 16:10:57 2022

                         l61 17BE                           l85 0C28                           l79 0B56  
                __CFG_BOR$ON 000000                  __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000  
               __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000  
                        l102 1470                          l111 178C                          l105 174E  
                        l114 157A                          l108 17B4                          l119 1662  
                        l151 1352                          l321 1196                          l146 12D6  
                        l308 1032                          l149 1318                          l157 08CC  
                        l190 15D4                          l159 08D4                          l191 15DC  
                        l184 0EAA                          l177 0B08                          l905 16D8  
                        l872 16A2                          l884 13E8                          l892 1620  
                        l869 169A                          l899 172A                          _GIE 007F97  
               __CFG_CPB$OFF 000000                          _PR2 000FCB                 __CFG_CPD$OFF 000000  
                        u700 13A0                          u701 139C                          u710 13D6  
                        u711 13D2                          u800 0EF0                          u720 1620  
                        u801 0EEC                          u721 161C                          u730 16CC  
                        u811 0F1A                          u731 16C8                          u820 0F3E  
                        u900 110E                          u740 12A0                          u821 0F3A  
                        u901 110A                          u741 129C                          u830 0F68  
                        u910 1156                          u750 12C2                          u831 0F64  
                        u911 1152                          u751 12BE                          u840 0FA8  
                        u680 1366                          u760 1318                          u920 085C  
                        u841 0FA4                          u681 1362                          u761 1314  
                        u921 0856                          u850 0FF2                          u690 1378  
                        u770 1326                          u930 085E                          u675 1736  
                        u851 0FEE                          u691 1374                          u771 1322  
                        u676 1738                          u860 1046                          u780 167E  
                        u940 0874                          u861 1042                          u781 167A  
                        u941 0870                          u790 0EBE                          u870 1078  
                        u950 08A4                          u791 0EBA                          u871 1074  
                        u951 08A0                          u880 10B6                          u960 08C0  
                        u881 10B2                          u961 08BC                          u890 10E0  
                        u970 08EE                          u891 10DC                          u971 08EA  
                        u980 08FC                          u981 08F8                          u990 0A24  
                        u991 0A20                          _abs 1664                          _pad 1292  
                        _isr 0008                          wreg 000FE8                 __CFG_LVP$OFF 000000  
               __CFG_WDT$OFF 000000                         ?_abs 001A                         l1401 1382  
                       l1403 13A0                         l1411 15EA                         l1501 1046  
                       l1405 13D6                         l1413 15FC                         l1421 16B4  
                       l1511 10B6                         l1503 1066                         l1415 1600  
                       l1423 16CC                         l1431 12B4                         l1521 112E  
                       l1513 10BE                         l1505 106A                         l1409 15DE  
                       l1417 16A4                         l1441 12FA                         l1433 12C2  
                       l1523 1140                         l1515 10D2                         l1507 1078  
                       l1451 167E                         l1419 16B0                         l1443 1326  
                       l1435 12CE                         l1427 1292                         l1381 1468  
                       l1373 13EC                         l1701 1658                         l1461 0EE2  
                       l1453 0EAC                         l1517 10E0                         l1525 1146  
                       l1509 1098                         l1445 133A                         l1437 12E2  
                       l1429 12A0                         l1541 08A4                         l1533 082C  
                       l1375 13EE                         l1383 172E                         l1471 0F3E  
                       l1463 0EF0                         l1455 0EB0                         l1527 1156  
                       l1519 110E                         l1391 17AA                         l1439 12F6  
                       l1551 08FC                         l1543 08A6                         l1535 084C  
                       l1377 145E                         l1385 1738                         l1481 0FA8  
                       l1473 0F46                         l1465 0F10                         l1457 0EBE  
                       l1529 1176                         l1449 1664                         l1393 17B8  
                       l1561 099A                         l1553 0902                         l1545 08C0  
                       l1537 0874                         l1379 1466                         l1387 173E  
                       l1491 0FF2                         l1483 0FC8                         l1475 0F5A  
                       l1467 0F14                         l1459 0EDE                         l1395 1354  
                       l1571 0A42                         l1563 09A0                         l1555 090A  
                       l1547 08DC                         l1539 0894                         l1389 1746  
                       l1493 1012                         l1485 0FCA                         l1477 0F68  
                       l1469 0F20                         l1397 1366                         l1581 0AA4  
                       l1573 0A5C                         l1565 09A6                         l1557 0912  
                       l1549 08EE                         l1901 0B26                         l1671 1514  
                       l1663 1774                         l1487 0FDC                         l1479 0F7A  
                       l1399 1378                         l1583 0AAA                         l1591 0AE0  
                       l1575 0A76                         l1559 0918                         l1567 0A0A  
                       l1911 0B34                         l1903 0B2C                         l1681 1544  
                       l1673 151A                         l1665 177E                         l1489 0FE2  
                       l1497 1034                         l1585 0ABC                         l1569 0A24  
                       l1577 0A84                         l1841 0D1A                         l1921 0B66  
                       l1913 0B36                         l1905 0B2E                         l1691 1628  
                       l1683 155C                         l1675 1530                         l1667 14FA  
                       l1499 1038                         l1587 0AC8                         l1579 0A96  
                       l1851 0D86                         l1843 0D28                         l1931 0BA4  
                       l1923 0B78                         l1915 0B38                         l1907 0B30  
                       l1693 1638                         l1685 1566                         l1677 1538  
                       l1669 1504                         l1589 0AD0                         l1861 0E38  
                       l1853 0DCE                         l1845 0D3A                         l1941 0C00  
                       l1933 0BB6                         l1925 0B7C                         l1917 0B3E  
                       l1909 0B32                         l1695 163C                         l1687 1570  
                       l1679 153E                         l1863 0E4C                         l1847 0D3E  
                       l1839 0CF6                         l1951 0C42                         l1943 0C06  
                       l1935 0BBE                         l1927 0B8E                         l1919 0B64  
                       l1697 164E                         l1689 1624                         l1857 0E06  
                       l1849 0D62                         l1873 0E74                         l1881 157C  
                       l1961 0C9C                         l1953 0C54                         l1945 0C1E  
                       l1937 0BDC                         l1929 0B92                         l1699 1652  
                       l1875 0E98                         l1859 0E2A                         l1867 0E5A  
                       l1883 1584                         l1891 170E                         l1963 0CAE  
                       l1955 0C66                         l1947 0C20                         l1939 0BE2  
                       l1869 0E68                         l1885 1592                         l1965 0CC4  
                       l1957 0C78                         l1949 0C30                         ?_pad 001E  
                       l1887 15B8                         l1967 0CE4                         l1959 0C8E  
                       l1895 0B0A                         l1889 1704                         l1897 0B18  
                       l1899 0B24                         ?_isr 0001                         STR_1 0801  
                       STR_2 081D                         STR_3 0810                         u1000 0A42  
                       u1001 0A3E                         u1010 0A5C                         u1011 0A58  
                       u1020 0A76                         u1021 0A72                         u1030 0A84  
                       u1031 0A80                         u1040 0A96                         u1041 0A92  
                       u1130 1638                         u1050 0AA4                         u1131 1634  
                       u1051 0AA0                         u1140 164E                         u1060 0ABC  
                       u1141 164A                         u1061 0AB8                         u1400 0B8E  
                       u1401 0B8A                         u1330 0D1A                         u1410 0BA4  
                       u1331 0D16                         u1411 0BA0                         u1340 0D62  
                       u1420 0BB6                         u1341 0D5E                         u1421 0BB2  
                       u1350 0D86                         u1430 0BDC                         u1351 0D82  
                       u1431 0BD8                         u1360 0E2A                         u1440 0C00  
                       u1361 0E26                         u1441 0BFC                         u1370 15D4  
                       u1450 0C1E                         u1507 150A                         u1371 15D0  
                       u1451 0C1A                         u1460 0C42                         u1380 0B64  
                       u1517 1520                         u1461 0C3E                         u1381 0B60  
                       u1470 0C54                         u1390 0B78                         u1527 1532  
                       u1471 0C50                         u1391 0B74                         u1480 0C66  
                       u1537 1554                         u1481 0C62                         u1547 1460  
                       u1557 146A                         u1497 1784                         _PEIE 007F96  
                       i2l70 128E                         i2l71 1276                         i2l66 125A  
                       _TMR2 000FCC                 ?_escreve_lcd 0001       envia_byte_lcd@endereco 000B  
                       abs@a 001A                         _dbuf 006C                         _main 0B0A  
                       _dtoa 082C                         _prec 0064                         _nout 0060  
                       pad@i 0025                         pad@p 0022                         fsr1h 000FE2  
                       fsr2h 000FDA                         indf2 000FDF                         fsr1l 000FE1  
                       pad@w 0027                         fsr2l 000FD9                         btemp 0058  
                       start 000E                __CFG_IESO$OFF 000000                __CFG_MCLRE$ON 000000  
    __end_of_caracter_inicio 1664                 ___param_bank 000000                        ??_abs 001C  
                      ??_pad 0024                        ??_isr 0006               __CFG_CCP2MX$ON 000000  
            __end_of___aodiv 1034                        ?_main 0001                        ?_dtoa 0029  
            __end_of___aomod 1198                        i2l102 14F8                        i2l111 17A6  
                      i2l105 1772                 vfpfcnvrt@fmt 008E                        _PORTD 000F83  
                      _TRISD 000F95                __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000  
              __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000  
             __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000  
             __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000  
              __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000      __size_of_envia_byte_lcd 0024  
             __CFG_EBTRB$OFF 000000                        _flags 0052                        _fputc 1354  
                      _fputs 15DE                        pad@fp 001E                        _width 0062  
                      _putch 17B6                        dtoa@d 002B                        dtoa@i 004B  
                      dtoa@n 0043                        dtoa@p 003D                        dtoa@s 0041  
                      dtoa@w 003F                  i2_limpa_lcd 178E                        tablat 000FF5  
                      ttemp5 0059                        ttemp6 005C                        ttemp7 0060  
                      status 000FD8                        wtemp8 0059               __CFG_ICPRT$OFF 000000  
            __initialization 16DA                 __end_of_main 0CF6                 __end_of_dtoa 0B0A  
           i2_envia_byte_lcd 1750                       ??_main 0051                       ??_dtoa 0033  
              __activetblptr 000001                       _ADCON1 000FC1                       ?_fputc 000E  
                     ?_fputs 0017                       ?_putch 0001                       _INT0IE 007F94  
                     _INT0IF 007F91                       _INT1IE 007F83                       _INT1IF 007F80  
                     _INT2IE 007F84                       _INT2IF 007F81                       i2l1711 1798  
                     i2l1641 14E6                       i2l1721 11D6                       i2l1713 119A  
                     i2l1643 14EE                       i2l1731 1204                       i2l1723 11D8  
                     i2l1715 11A8                       i2l1645 14F0                       i2l1637 1474  
                     i2l1661 176A                       i2l1709 178E                       i2l1741 124A  
                     i2l1733 1206                       i2l1725 11DA                       i2l1717 11BA  
                     i2l1639 1476                       i2l1655 1752                       i2l1743 124C  
                     i2l1727 11EC                       i2l1719 11CC                       i2l1735 120C  
                     i2l1657 175C                       i2l1761 128C                       i2l1753 1268  
                     i2l1745 124E                       i2l1737 121E                       i2l1729 11EE  
                     i2l1659 1762                       i2l1755 1270                       i2l1747 1250  
                     i2l1739 1230                       i2l1749 1254                       i2l1759 1284  
                     _TMR2IF 007CF1      __size_of_inicializa_lcd 0082               __CFG_XINST$OFF 000000  
           _envia_nibble_lcd 13EA                 vfprintf@cfmt 004F             ?_caracter_inicio 000C  
                  ??___aodiv 0018                    ??___aomod 0018               __CFG_STVREN$ON 000000  
                     clear_0 16E0                       _printf 1704                       pad@buf 0020  
                     dtoa@fp 0029                       _strlen 16A4                       fputc@c 000E  
                     fputs@c 001B                       fputs@i 001C                       fputs@s 0017  
               __mediumconst 0000                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8             __end_of_vfprintf 15DE                   __accesstop 0060  
    __end_of__initialization 16F2           envia_byte_lcd@dado 000A              __CFG_PBADEN$OFF 000000  
            __CFG_FOSC$XT_XT 000000   __end_ofi2_envia_nibble_lcd 14FA         __size_of_escreve_lcd 000E  
              ___rparam_used 000001                 escreve_lcd@c 000C               __pcstackCOMRAM 0001  
              __end_of_fputc 13EA                __end_of_fputs 1622                __end_of_putch 17C0  
             _envia_byte_lcd 172C                      ??_fputc 0012                      ??_fputs 001B  
                    ??_putch 000D           main@printa_na_tela 00A8                   __pbssBANK0 0060  
         __size_of_limpa_lcd 001A                      ?_printf 00A0                      ?_strlen 0008  
     __end_of_envia_byte_lcd 1750           __size_of_vfpfcnvrt 01B6                   _botao_azul 0056  
   __end_ofi2_envia_byte_lcd 1774                 ?i2_limpa_lcd 0001              __CFG_VREGEN$OFF 000000  
             _inicializa_lcd 14FA                      __Hparam 0000         caracter_inicio@linha 000D  
                    __Lparam 0000                      ___aodiv 0EAC                      ___aomod 1034  
                  ?_vfprintf 009A                 __psmallconst 0800                      __pcinit 16DA  
                    __ramtop 0800                      __ptext0 0B0A                      __ptext1 1704  
                    __ptext2 157C                      __ptext3 0CF6                      __ptext4 082C  
                    __ptext5 1292                      __ptext6 16A4                      __ptext7 15DE  
                    __ptext8 1354                      __ptext9 17B6              __size_of_printf 0028  
            __size_of_strlen 0036                    _T2CONbits 000FCA                 __size_of_abs 0040  
            ?_envia_byte_lcd 000A                 __size_of_pad 00C2                 __size_of_isr 128A  
          __end_of_limpa_lcd 178E     __end_of_envia_nibble_lcd 1472     i2envia_byte_lcd@endereco 0004  
     __end_of_inicializa_lcd 157C               __pintcode_body 1198         end_of_initialization 16F2  
                    fputc@fp 0010                      int_func 1198                      fputs@fp 0019  
          __end_of_vfpfcnvrt 0EAC                      postdec2 000FDD                      postinc0 000FEE  
                    postinc1 000FE6                      postinc2 000FDE                   ??_vfprintf 004F  
                 _tempo_azul 0068                      strlen@a 000A                      strlen@s 0008  
                  _PORTAbits 000F80                    _PORTDbits 000F83                    _TRISAbits 000F92  
                  _TRISBbits 000F93              ?_inicializa_lcd 0001                   main@empate 00AA  
                vfpfcnvrt@ap 0090                  vfpfcnvrt@fp 008C                  vfpfcnvrt@ll 0092  
         i2_envia_nibble_lcd 1472     __size_of_caracter_inicio 0042       i2envia_nibble_lcd@dado 0002  
             __end_of_printf 172C               __end_of_strlen 16DA          start_initialization 16DA  
        ?i2_envia_nibble_lcd 0001                  __end_of_abs 16A4                  __end_of_pad 1354  
                __end_of_isr 1292                ??_escreve_lcd 000C         __size_ofi2_limpa_lcd 001A  
     caracter_inicio@posicao 000E         ??i2_envia_nibble_lcd 0001                  vfprintf@fmt 009C  
           __CFG_LPT1OSC$OFF 000000                     ??_printf 0051                     ??_strlen 000A  
                __pbssCOMRAM 0052                __pcstackBANK0 008C             ___aodiv@dividend 0008  
          ?i2_envia_byte_lcd 0003           ??i2_envia_byte_lcd 0004         i2envia_byte_lcd@dado 0003  
        __end_of_escreve_lcd 17B6                    __pintcode 0008                     ?___aodiv 0008  
                   ?___aomod 0008             ___aodiv@quotient 001A               _tempo_vermelho 0066  
           ??_envia_byte_lcd 000B            __size_of_vfprintf 0062                  __smallconst 0800  
          ?_envia_nibble_lcd 0001            ??_caracter_inicio 000D               __size_of_fputc 0096  
             __size_of_fputs 0044                    _limpa_lcd 1774               __size_of_putch 000A  
         ??_envia_nibble_lcd 0008                     i2u120_40 1268                     i2u120_41 1264  
                   i2u112_45 175A                     i2u112_46 175C                     i2u121_40 1284  
                   i2u121_41 1280                     i2u115_40 11A8                     i2u115_41 11A4  
                   i2u116_40 11BA                     i2u116_41 11B6                     i2u117_40 11CC  
                   i2u117_41 11C8                     i2u118_40 121E                     i2u118_41 121A  
                   i2u119_40 1230                     i2u119_41 122C                     i2u156_47 11F8  
                   i2u157_47 179E                     i2u158_47 14E8                     i2u159_47 14F2  
           __CFG_WDTPS$32768 000000                    _vfpfcnvrt 0CF6             ??_inicializa_lcd 000C  
                 ?_limpa_lcd 0001                  _escreve_lcd 17A8        caracter_inicio@coluna 000C  
                   __Hrparam 0000                   vfprintf@ap 009E                     __Lrparam 0000  
                 vfprintf@fp 009A                 __Lsmallconst 0800             __size_of___aodiv 0188  
           __size_of___aomod 0164                   ?_vfpfcnvrt 008C              ___aodiv@divisor 0010  
            ___aodiv@counter 0018                     _dtoa$421 003B                     __ptext10 17A8  
                   __ptext11 1664                     __ptext20 178E                     __ptext12 1034  
                   __ptext21 1750                     __ptext13 0EAC                     __ptext22 1472  
                   __ptext14 1774                     __ptext15 14FA                     __ptext16 1622  
                   __ptext17 172C                     __ptext18 13EA                     _mediador 006A  
              __size_of_main 01EC                __size_of_dtoa 02DE                     int$flags 0058  
                   _vfprintf 157C                    printf@fmt 00A0             ___aomod@dividend 0008  
                  putch@data 000D               _botao_vermelho 0054                ??i2_limpa_lcd 0005  
                ??_limpa_lcd 000C                     intlevel2 0000  __size_ofi2_envia_nibble_lcd 0088  
  __size_ofi2_envia_byte_lcd 0024                     printf@ap 00A6              ___aomod@divisor 0010  
                ??_vfpfcnvrt 004D              ___aomod@counter 0018              _caracter_inicio 1622  
       envia_nibble_lcd@dado 0009                 ___aodiv@sign 0019          __end_ofi2_limpa_lcd 17A8  
               ___aomod@sign 0019    __size_of_envia_nibble_lcd 0088  
